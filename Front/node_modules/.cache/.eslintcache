[{"C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\index.js":"1","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\App.js":"2","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\redux\\store.js":"3","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\redux\\reducer.js":"4","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\About\\About.jsx":"5","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Nav\\Nav.jsx":"6","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Detail\\Detail.jsx":"7","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Cards\\Cards.jsx":"8","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Form\\Form.jsx":"9","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Favoritos\\Favorites.jsx":"10","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\redux\\actions.js":"11","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Form\\validation.js":"12","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\SearchBar\\SearchBar.jsx":"13","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Card\\Card.jsx":"14","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Registro\\Registro.jsx":"15","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Registro\\validaciones.js":"16"},{"size":532,"mtime":1682798679319,"results":"17","hashOfConfig":"18"},{"size":3515,"mtime":1682867413273,"results":"19","hashOfConfig":"18"},{"size":350,"mtime":1678882639619,"results":"20","hashOfConfig":"18"},{"size":2775,"mtime":1682784987761,"results":"21","hashOfConfig":"18"},{"size":876,"mtime":1682864672174,"results":"22","hashOfConfig":"18"},{"size":1122,"mtime":1682863880968,"results":"23","hashOfConfig":"18"},{"size":2190,"mtime":1682621505282,"results":"24","hashOfConfig":"18"},{"size":2423,"mtime":1682866538924,"results":"25","hashOfConfig":"18"},{"size":3729,"mtime":1682799619288,"results":"26","hashOfConfig":"18"},{"size":2120,"mtime":1682865937228,"results":"27","hashOfConfig":"18"},{"size":1932,"mtime":1682791562907,"results":"28","hashOfConfig":"18"},{"size":1664,"mtime":1678983185145,"results":"29","hashOfConfig":"18"},{"size":1234,"mtime":1682866904828,"results":"30","hashOfConfig":"18"},{"size":5284,"mtime":1682866141048,"results":"31","hashOfConfig":"18"},{"size":2944,"mtime":1682801471081,"results":"32","hashOfConfig":"18"},{"size":932,"mtime":1682621266028,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},"wq4wle",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"38"},"C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\index.js",["91"],[],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n{\r\n  /*Provider nos va a permiter unir redux con react y le pasamos como props el mismo store que creamos en redux a react*/\r\n}\r\n",[],"C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\App.js",["92","93","94","95","96"],[],"import \"./App.css\";\r\nimport { Login } from \"./redux/actions\";\r\nimport Cards from \"./components/Cards/Cards\";\r\nimport { useState } from \"react\";\r\nimport { Routes } from \"react-router-dom\";\r\nimport { Route } from \"react-router-dom\";\r\nimport About from \"./components/About/About\";\r\nimport Detail from \"./components/Detail/Detail\";\r\nimport Form from \"./components/Form/Form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Favorites from \"./components/Favoritos/Favorites\";\r\nimport Registro from \"./components/Registro/Registro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction App() {\r\n  const idUser = useSelector((state) => state.idUser);\r\n  const [characters, setcharacters] = useState([]);\r\n\r\n  const FuncionCharRandom = async () => {\r\n    const inicioChar = 1;\r\n    const FinChar = 826; // cantidad de personajes en total.\r\n\r\n    const idCharRandom = inicioChar + Math.floor(Math.random() * FinChar);\r\n\r\n    const response = await axios.get(\r\n      `http://localhost:3001/onsearch/${idCharRandom}`\r\n    );\r\n\r\n    setcharacters(\r\n      characters.includes(response.data)\r\n        ? characters\r\n        : [...characters, response.data]\r\n    );\r\n  };\r\n\r\n  const onSearch = (id) => {\r\n    const URL_BASE = \"http://localhost:3001\";\r\n\r\n    if (characters.find((char) => char.id === id)) {\r\n      return alert(\"Personaje repetido\");\r\n    }\r\n\r\n    fetch(`${URL_BASE}/onsearch/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.name) {\r\n          setcharacters((oldChars) => [...oldChars, data]);\r\n        } else {\r\n          swal({\r\n            text: \"No hay personajes con ese ID\",\r\n            icon: \"warning\",\r\n            buttons: \"Aceptar\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const onClose = (id) => {\r\n    setcharacters(characters.filter((char) => char.id !== id));\r\n  };\r\n\r\n  const [access, setaccess] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    !access && navigate(\"/\");\r\n  }, [access]);\r\n\r\n  return (\r\n    <div className=\"App\" style={{ padding: \"25px\" }}>\r\n      {/*Esto es lo que siempre se va a mantener en todos los servidores vigente , pero usamos el hook useLocation para obtener una propiedad que es el nombre de una ruta , la usamos como condicion diciendole que si pathname mo es igual que la ruta de nuestro querido formulario , entonces que se muestre nav en el resto de rutas menos en ese..*/}\r\n      <Routes>\r\n        <Route path=\"/Favorites\" element={<Favorites />}></Route>\r\n        <Route path=\"/about\" element={<About />} />\r\n        <Route\r\n          path=\"/home\"\r\n          element={\r\n            <Cards\r\n              FuncionCharRandom={FuncionCharRandom}\r\n              idUser={idUser}\r\n              characters={characters}\r\n              onClose={onClose}\r\n              onSearch={onSearch}\r\n              setcharacters={setcharacters}\r\n            />\r\n          }\r\n        />\r\n        <Route path=\"/Registro\" element={<Registro />} />\r\n        <Route path=\"/detail/:id\" element={<Detail />} />\r\n        {/* <Route path=\"/\" element={<Inicio FuncionInicio={FuncionInicio} />} /> */}\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <Form setcharacters={setcharacters} characters={characters} />\r\n          }\r\n        />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n{\r\n  /*le estamos pasando otra props => {character: y onClose:}*/\r\n}\r\nexport default App;\r\n","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\redux\\store.js",[],[],"C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\redux\\reducer.js",["97","98"],[],"import {\r\n  FILTER,\r\n  ORDER,\r\n  GET_FAVORITES,\r\n  LOGIN,\r\n  REMPLACE_FAV,\r\n  REMPLACE_HOME,\r\n  VACIO_HOME,\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  myFavorites: [],\r\n  character: [],\r\n  allCharacters: [],\r\n  idUser: 0,\r\n};\r\n\r\nconst reducer = (state = initialState, actions) => {\r\n  console.log(state.idUser);\r\n  switch (actions.type) {\r\n    case GET_FAVORITES:\r\n      // console.log(actions.payload);\r\n      return {\r\n        ...state,\r\n        myFavorites: actions.payload, //* aca si hago [...state.myFavorites, actions.payload] se va a crear un array nuevo donde dentro van haber elementos y otro array que seria actions.payload..\r\n        allCharacters: actions.payload, //* hacemos una copia de myfavorites en otro array para despues hacer el filter y order y no pisar el array de Myfavorites..\r\n      };\r\n    case FILTER:\r\n      if (actions.payload === \"All Character\") {\r\n        // pregunta si el genero es all character que me traiga todas las cards , osea el array completo (array auxiliar)\r\n        return {\r\n          ...state,\r\n          myFavorites: [...state.allCharacters],\r\n        };\r\n      } else {\r\n        // de lo contrario guardamos en un auxiliar el array completo , para poder manipularlo despues en el filtrado por los otros generos\r\n        const Arrayaxuliar = [...state.allCharacters];\r\n        return {\r\n          ...state,\r\n          myFavorites: Arrayaxuliar.filter(\r\n            (pars) => pars.gender === actions.payload\r\n          ),\r\n        };\r\n      }\r\n\r\n    case ORDER:\r\n      return {\r\n        ...state,\r\n\r\n        // si algunos de los casos se cumplio myFavorites pasa a ser el array modificado y ordenado... [id 1 , id 2 , id3] , luego en el componente Favorites.jsx recorro este array y voy renderizando cada personaje en base a su orden...\r\n        myFavorites:\r\n          actions.payload === \"Descendente\"\r\n            ? [...state.myFavorites].sort((a, b) => b.id - a.id) // si b es menor al a ===> decendente..\r\n            : [...state.myFavorites].sort((a, b) => a.id - b.id), // si a es menor a b ===> acendente... y el metodo sort devuelve un nuevo array con los elementos ordenados..\r\n      }; // ! ERROR: puse allcharacters y esta mal !!! porque hace  un ordenamiento de todas las cartas y no de las cartas filtradas en myfavorites.. cuando hago el filter , me devuelve las cartas filtradas en myfavorites y en base a ello debo hacer el ordenamiento... por eso lo anterior estaba mal...\r\n    case LOGIN:\r\n      return {\r\n        ...state,\r\n        idUser: actions.payload,\r\n      };\r\n\r\n    case REMPLACE_FAV:\r\n      return {\r\n        ...state,\r\n        myFavorites: actions.payload,\r\n        allCharacters: actions.payload,\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\About\\About.jsx",["99"],[],"C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Nav\\Nav.jsx",["100","101","102"],[],"C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Detail\\Detail.jsx",["103","104","105","106","107","108"],[],"import { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from \"./Detail.module.css\";\r\nimport Nav from \"../Nav/Nav\";\r\n\r\nconst Detail = () => {\r\n  const { id } = useParams(); // ! ERROR QUE ME COSTO LA VIDA FUE PONER ID EN VEZ DE DETAILID...PORQUE EN LAS RUTAS DE APP TENGO COM DETAIL/DETAILID\r\n  const [character, setcharacter] = useState({});\r\n  useEffect(() => {\r\n    //* cuando el componente se monte vamos hgacer la peticion a la url con el id que obtenemos de params Hook..\r\n    const URL = \"http://localhost:3001\";\r\n    axios\r\n      .get(`${URL}/detail/${id}`)\r\n      .then((Response) => setcharacter(Response.data));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className={styles.padre}>\r\n        <div className={styles.div1}>\r\n          {character.name ? (\r\n            <div className={styles.div2}>\r\n              <div className={styles.div3}>\r\n                <h2>Name: {character.name}</h2>\r\n                <h2>Status: {character.status}</h2>\r\n                <h2>Specie: {character.species}</h2>\r\n                <h2>Gender: {character.gender}</h2>\r\n                <h2>Origin: {character.origin?.name}</h2>\r\n                {/*Se pregunta si ya se cargo esta propiedad , entonces que se ejecute y devuelva la propiedad name del origin que es propiedad de character*/}\r\n              </div>\r\n              <img className={styles.imagen} src={character.image} />\r\n            </div>\r\n          ) : (\r\n            <h3 className={styles.h3}>Loading...</h3> //* si todavia no llego la repuesta o se tarda en darnosla entonces renderizamos un \"CARGANDO\".\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Detail;\r\n\r\n{\r\n  /*Este código es el que buscará al personaje de la API cada vez que el componente se monte.*/\r\n}\r\n{\r\n  /*Y luego, cada vez que se desmonte, borrará su información.*/\r\n}\r\n{\r\n  /*operador ternario ? si se cumple la condicion : si no se cumple la condicion*/\r\n}\r\n{\r\n  /*Poner siempre () parentesis cuando se trata de retornar mucho codigo y siempre un div vacio , para que todo ese codigo sea un solo elemento*/\r\n}\r\n","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Cards\\Cards.jsx",["109","110"],[],"C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Form\\Form.jsx",["111","112"],[],"import styles from \"./Form.module.css\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport validacion from \"./validation\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Login } from \"../../redux/actions\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst Form = () => {\r\n  const [userData, setUserData] = useState({ username: \"\", password: \"\" });\r\n  const [errores, seterrores] = useState({ username: \"\", password: \"\" });\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = (event) => {\r\n    const Propiedad = event.target.name; // esto seria el nombre del input osea username o password..\r\n    const value = event.target.value; // esto seria el valor de la propiedad , osea lo que escribamos en el input..\r\n    setUserData({ ...userData, [Propiedad]: value });\r\n    seterrores(validacion({ ...userData, [Propiedad]: value }, errores));\r\n  };\r\n  const SubmitHandel = async (event) => {\r\n    try {\r\n      event.preventDefault(); // hace que no se recargue la pagina , por defecto el evento submit recarga la pagina...\r\n      await axios.get(\r\n        `http://localhost:3001/login?username=${userData.username}&password=${userData.password}`\r\n      );\r\n      dispatch(Login(userData.username, userData.password));\r\n      swal({\r\n        text: \"Inicio de sesion exitoso!!.\",\r\n        icon: \"success\",\r\n        buttons: \"Aceptar\",\r\n      });\r\n      navigate(\"/Home\");\r\n    } catch (error) {\r\n      swal({\r\n        title: \"Alert\",\r\n        text: error.response.data.error,\r\n        icon: \"warning\",\r\n        buttons: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.div2}>\r\n      <div className={styles.div}>\r\n        <h1>INICIO DE SESION</h1>\r\n        <form onSubmit={SubmitHandel}>\r\n          {/*Es un eventp de formulario no de button..*/}\r\n          <div className={styles.div1}>\r\n            <label className={styles.label} htmlFor=\"username\">\r\n              Username :\r\n            </label>\r\n            <input\r\n              placeholder=\"Escribir email aqui...\"\r\n              value={userData.username}\r\n              type=\"text\"\r\n              name=\"username\"\r\n              onChange={handleInputChange}\r\n              className={errores.username ? styles.error : styles.correcto}\r\n            ></input>\r\n            <span className={styles.span}>{errores.username}</span>\r\n          </div>\r\n          <div className={styles.div1}>\r\n            <label className={styles.label} htmlFor=\"password\">\r\n              Password :\r\n            </label>\r\n            <input\r\n              placeholder=\"Escribir contraseña aqui...\"\r\n              value={userData.password}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={handleInputChange}\r\n              className={errores.password ? styles.error : styles.correcto}\r\n            ></input>\r\n            <span className={styles.span}>{errores.password}</span>\r\n          </div>\r\n          <button className={styles.boton} type=\"submit\">\r\n            Iniciar Sesion\r\n          </button>\r\n          <Link className={styles.registro} to=\"/Registro\">\r\n            Registrarse\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n{\r\n  /* className={errores.username ? styles.error : styles.success} ==> entonces aca se pregunta si en el estado de errores en gmail hay algo entonces que se ejecute el estilo de la class error , de lo contrario que se ejecute la class que esta todo correcto*/\r\n}\r\n{\r\n  /* <span>{errores.username}</span>  ==> Aca creamos un span que nos mostrara el tipo de error al lado del input*/\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Favoritos\\Favorites.jsx",["113"],[],"C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\redux\\actions.js",["114"],[],"import axios from \"axios\";\r\nexport const FILTER = \"FILTER\";\r\nexport const ORDER = \"ORDER\";\r\nexport const LOGIN = \"LOGIN\";\r\nexport const GET_FAVORITES = \"GET_FAVORITES\";\r\nexport const REMPLACE_FAV = \"REMPLACE_FAV\";\r\nexport const REMPLACE_HOME = \"REMPLACE_HOME\";\r\nexport const VACIO_HOME = \"VACIO_HOME\";\r\n\r\nexport const getFavorites = (idUser) => {\r\n  return async function (dispatch) {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3001/favoritos?idUser=${idUser}`\r\n      );\r\n      dispatch({ type: GET_FAVORITES, payload: response.data });\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 500) {\r\n        //* cuando me tiraba el error de estado 500 cuando hacia el dispatch del get , aca lo que hago es preguntar por ese error y setear el peyload en un array vacio , de esta manera no mostrara mas la card ultima cundo sea eliminada\r\n        dispatch({ type: GET_FAVORITES, payload: [] });\r\n      } else {\r\n        //* de lo contrario tirrar el error normal y corriente de catch..\r\n        alert(error.response.data.error);\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const Login = (username, password) => {\r\n  return async function (dispatch) {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3001/login?username=${username}&password=${password}`\r\n      );\r\n      if (response.data.access === true) {\r\n        dispatch({ type: LOGIN, payload: response.data.dataValues.id });\r\n      }\r\n    } catch (error) {\r\n      alert(error.response.data.error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const filterCards = (gender) => {\r\n  return { type: FILTER, payload: gender };\r\n};\r\n\r\nexport const orderCards = (id) => {\r\n  return { type: ORDER, payload: id };\r\n};\r\n\r\nexport const RemplaceFav = (Array) => {\r\n  return { type: REMPLACE_FAV, payload: Array };\r\n};\r\n\r\n{\r\n  /*A la funcion delteFavorite recibe el id de los personajes y addFavorite recibe un personaje*/\r\n}\r\n","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Form\\validation.js",["115","116"],[],"\r\n\r\nconst validacion = (userData,erroresx) => {\r\n  // username:\r\n  const errores = {...erroresx};\r\n  if (!userData.username){\r\n    errores.username =  \"Email vacio\"\r\n  } else if(userData.username.length > 35){\r\n    errores.username =  \"El email no debe superar los 35 caracteres...\"\r\n  }else if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username))  {\r\n    errores.username =  \"\";\r\n  }else{\r\n    errores.username =  \"Email invalido\";\r\n}\r\n\r\n//password:\r\n\r\n if(userData.password.length < 6 &&  userData.password.length > 10){\r\n  errores.password =  \"La longitud debe ser mayor de 6 y menor a 10 \";\r\n} else if(/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(userData.password)){\r\n errores.password = \"\";\r\n} else{\r\n  errores.password =  \"password invalida\";\r\n}\r\nreturn errores; // retornamos el objeto con los errores modificados..\r\n}\r\n\r\n\r\nexport default validacion;\r\n\r\n// const validacionEmail = (userData,seterrores,errores) => {\r\n//     if (!userData.username) seterrores({ ...errores, username: \"Email vacío\" }); \r\n//   else {\r\n//     if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username)) \r\n//       seterrores({ ...errores, username: \"\" });\r\n//     else seterrores({ ...errores, username: \"Email inválido\" });\r\n//   }\r\n// }\r\n// const validacionPassword = (userData,seterrores,errores) => {\r\n//     if (!userData.password) seterrores({ ...errores, password: \"Contraseña vacía\" });\r\n//   else {\r\n//     if (/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(userData.password))\r\n//       seterrores({ ...errores, password: \"\" });\r\n//     else seterrores({ ...errores, password: \"Contraseña inválida\" });\r\n//   }\r\n// }","C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\SearchBar\\SearchBar.jsx",[],[],"C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Card\\Card.jsx",["117","118","119","120","121","122"],[],"C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Registro\\Registro.jsx",[],[],"C:\\Users\\Usuario\\OneDrive\\Escritorio\\rick_and_morty\\Front\\src\\components\\Registro\\validaciones.js",["123","124"],[],"const validaciones = (userData, erroresx) => {\r\n  // username:\r\n  const errores = { ...erroresx };\r\n  if (!userData.username) {\r\n    errores.username = \"Email vacio\";\r\n  } else if (userData.username.length > 35) {\r\n    errores.username = \"El email no debe superar los 35 caracteres...\";\r\n  } else if (\r\n    /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username)\r\n  ) {\r\n    errores.username = \"\";\r\n  } else {\r\n    errores.username = \"Email invalido\";\r\n  }\r\n\r\n  //password:\r\n\r\n  if (userData.password.length < 6 && userData.password.length > 10) {\r\n    errores.password = \"La longitud debe ser mayor de 6 y menor a 10 \";\r\n  } else if (\r\n    /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(userData.password)\r\n  ) {\r\n    errores.password = \"\";\r\n  } else {\r\n    errores.password = \"password invalida\";\r\n  }\r\n  return errores; // retornamos el objeto con los errores modificados..\r\n};\r\n\r\nexport default validaciones;\r\n",{"ruleId":"125","severity":1,"message":"126","line":18,"column":1,"nodeType":"127","messageId":"128","endLine":20,"endColumn":2},{"ruleId":"129","severity":1,"message":"130","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":15},{"ruleId":"129","severity":1,"message":"133","line":14,"column":10,"nodeType":"131","messageId":"132","endLine":14,"endColumn":21},{"ruleId":"129","severity":1,"message":"134","line":64,"column":18,"nodeType":"131","messageId":"132","endLine":64,"endColumn":27},{"ruleId":"135","severity":1,"message":"136","line":69,"column":6,"nodeType":"137","endLine":69,"endColumn":14,"suggestions":"138"},{"ruleId":"125","severity":1,"message":"126","line":103,"column":1,"nodeType":"127","messageId":"128","endLine":105,"endColumn":2},{"ruleId":"129","severity":1,"message":"139","line":7,"column":3,"nodeType":"131","messageId":"132","endLine":7,"endColumn":16},{"ruleId":"129","severity":1,"message":"140","line":8,"column":3,"nodeType":"131","messageId":"132","endLine":8,"endColumn":13},{"ruleId":"141","severity":1,"message":"142","line":26,"column":9,"nodeType":"143","endLine":26,"endColumn":55},{"ruleId":"141","severity":1,"message":"142","line":9,"column":7,"nodeType":"143","endLine":12,"endColumn":9},{"ruleId":"141","severity":1,"message":"142","line":23,"column":9,"nodeType":"143","endLine":23,"endColumn":55},{"ruleId":"125","severity":1,"message":"126","line":36,"column":1,"nodeType":"127","messageId":"128","endLine":38,"endColumn":2},{"ruleId":"135","severity":1,"message":"144","line":17,"column":6,"nodeType":"137","endLine":17,"endColumn":8,"suggestions":"145"},{"ruleId":"141","severity":1,"message":"142","line":33,"column":15,"nodeType":"143","endLine":33,"endColumn":70},{"ruleId":"125","severity":1,"message":"126","line":45,"column":1,"nodeType":"127","messageId":"128","endLine":47,"endColumn":2},{"ruleId":"125","severity":1,"message":"126","line":48,"column":1,"nodeType":"127","messageId":"128","endLine":50,"endColumn":2},{"ruleId":"125","severity":1,"message":"126","line":51,"column":1,"nodeType":"127","messageId":"128","endLine":53,"endColumn":2},{"ruleId":"125","severity":1,"message":"126","line":54,"column":1,"nodeType":"127","messageId":"128","endLine":56,"endColumn":2},{"ruleId":"129","severity":1,"message":"146","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":13},{"ruleId":"135","severity":1,"message":"147","line":29,"column":6,"nodeType":"137","endLine":29,"endColumn":14,"suggestions":"148"},{"ruleId":"125","severity":1,"message":"126","line":92,"column":1,"nodeType":"127","messageId":"128","endLine":94,"endColumn":2},{"ruleId":"125","severity":1,"message":"126","line":95,"column":1,"nodeType":"127","messageId":"128","endLine":97,"endColumn":2},{"ruleId":"135","severity":1,"message":"149","line":16,"column":6,"nodeType":"137","endLine":16,"endColumn":8,"suggestions":"150"},{"ruleId":"125","severity":1,"message":"126","line":56,"column":1,"nodeType":"127","messageId":"128","endLine":58,"endColumn":2},{"ruleId":"151","severity":1,"message":"152","line":10,"column":20,"nodeType":"153","messageId":"154","endLine":10,"endColumn":21,"suggestions":"155"},{"ruleId":"151","severity":1,"message":"152","line":10,"column":36,"nodeType":"153","messageId":"154","endLine":10,"endColumn":37,"suggestions":"156"},{"ruleId":"129","severity":1,"message":"157","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":22},{"ruleId":"135","severity":1,"message":"144","line":71,"column":6,"nodeType":"137","endLine":71,"endColumn":19,"suggestions":"158"},{"ruleId":"141","severity":1,"message":"142","line":101,"column":11,"nodeType":"143","endLine":101,"endColumn":53},{"ruleId":"141","severity":1,"message":"142","line":123,"column":13,"nodeType":"143","endLine":123,"endColumn":55},{"ruleId":"125","severity":1,"message":"126","line":136,"column":1,"nodeType":"127","messageId":"128","endLine":138,"endColumn":2},{"ruleId":"125","severity":1,"message":"126","line":139,"column":1,"nodeType":"127","messageId":"128","endLine":141,"endColumn":2},{"ruleId":"151","severity":1,"message":"152","line":9,"column":12,"nodeType":"153","messageId":"154","endLine":9,"endColumn":13,"suggestions":"159"},{"ruleId":"151","severity":1,"message":"152","line":9,"column":28,"nodeType":"153","messageId":"154","endLine":9,"endColumn":29,"suggestions":"160"},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'setaccess' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["161"],"'REMPLACE_HOME' is defined but never used.","'VACIO_HOME' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["162"],"'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'prevIdUser' and 'setcharacters'. Either include them or remove the dependency array. If 'setcharacters' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["163"],"React Hook useEffect has missing dependencies: 'dispatch' and 'idUser'. Either include them or remove the dependency array.",["164"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["165","166"],["167","168"],"'getFavorites' is defined but never used.",["169"],["170","171"],["172","173"],{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"messageId":"182","fix":"183","desc":"184"},{"messageId":"185","fix":"186","desc":"187"},{"messageId":"182","fix":"188","desc":"184"},{"messageId":"185","fix":"189","desc":"187"},{"desc":"190","fix":"191"},{"messageId":"182","fix":"192","desc":"184"},{"messageId":"185","fix":"193","desc":"187"},{"messageId":"182","fix":"194","desc":"184"},{"messageId":"185","fix":"195","desc":"187"},"Update the dependencies array to be: [access, navigate]",{"range":"196","text":"197"},"Update the dependencies array to be: [id]",{"range":"198","text":"199"},"Update the dependencies array to be: [idUser, prevIdUser, setcharacters]",{"range":"200","text":"201"},"Update the dependencies array to be: [dispatch, idUser]",{"range":"202","text":"203"},"removeEscape",{"range":"204","text":"205"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"206","text":"207"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"208","text":"205"},{"range":"209","text":"207"},"Update the dependencies array to be: [id, myFavorites]",{"range":"210","text":"211"},{"range":"212","text":"205"},{"range":"213","text":"207"},{"range":"214","text":"205"},{"range":"215","text":"207"},[2099,2107],"[access, navigate]",[732,734],"[id]",[1195,1203],"[idUser, prevIdUser, setcharacters]",[573,575],"[dispatch, idUser]",[303,304],"",[303,303],"\\",[319,320],[319,319],[2884,2897],"[id, myFavorites]",[314,315],[314,314],[330,331],[330,330]]