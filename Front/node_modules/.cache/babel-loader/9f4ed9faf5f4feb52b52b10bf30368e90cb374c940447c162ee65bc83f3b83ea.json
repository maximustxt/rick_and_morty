{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\rick_and_morty\\\\Front\\\\src\\\\components\\\\Detail\\\\Detail.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport styles from \"./Detail.module.css\";\nimport Nav from \"../Nav/Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Detail = () => {\n  _s();\n  var _character$origin;\n  const {\n    id\n  } = useParams(); // ! ERROR QUE ME COSTO LA VIDA FUE PONER ID EN VEZ DE DETAILID...PORQUE EN LAS RUTAS DE APP TENGO COM DETAIL/DETAILID\n  const [character, setcharacter] = useState({});\n  useEffect(() => {\n    //* cuando el componente se monte vamos hgacer la peticion a la url con el id que obtenemos de params Hook..\n    const URL = \"http://localhost:3001\";\n    axios.get(`${URL}/detail/${id}`).then(Response => setcharacter(Response.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.padre,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.div1,\n        children: character.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.div2,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.div3,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Name: \", character.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Status: \", character.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Specie: \", character.species]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Gender: \", character.gender]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Origin: \", (_character$origin = character.origin) === null || _character$origin === void 0 ? void 0 : _character$origin.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.imagen,\n            src: character.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.h3,\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this) //* si todavia no llego la repuesta o se tarda en darnosla entonces renderizamos un \"CARGANDO\".\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Detail, \"sO4a6JsfeDfFNxhXQmpA8curKLI=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\n{\n  /*Este código es el que buscará al personaje de la API cada vez que el componente se monte.*/\n}\n{\n  /*Y luego, cada vez que se desmonte, borrará su información.*/\n}\n{\n  /*operador ternario ? si se cumple la condicion : si no se cumple la condicion*/\n}\n{\n  /*Poner siempre () parentesis cuando se trata de retornar mucho codigo y siempre un div vacio , para que todo ese codigo sea un solo elemento*/\n}\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["useState","useParams","useEffect","axios","styles","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","Detail","_s","_character$origin","id","character","setcharacter","URL","get","then","Response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","padre","div1","name","div2","div3","status","species","gender","origin","imagen","src","image","h3","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/rick_and_morty/Front/src/components/Detail/Detail.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from \"./Detail.module.css\";\r\nimport Nav from \"../Nav/Nav\";\r\n\r\nconst Detail = () => {\r\n  const { id } = useParams(); // ! ERROR QUE ME COSTO LA VIDA FUE PONER ID EN VEZ DE DETAILID...PORQUE EN LAS RUTAS DE APP TENGO COM DETAIL/DETAILID\r\n  const [character, setcharacter] = useState({});\r\n  useEffect(() => {\r\n    //* cuando el componente se monte vamos hgacer la peticion a la url con el id que obtenemos de params Hook..\r\n    const URL = \"http://localhost:3001\";\r\n    axios\r\n      .get(`${URL}/detail/${id}`)\r\n      .then((Response) => setcharacter(Response.data));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className={styles.padre}>\r\n        <div className={styles.div1}>\r\n          {character.name ? (\r\n            <div className={styles.div2}>\r\n              <div className={styles.div3}>\r\n                <h2>Name: {character.name}</h2>\r\n                <h2>Status: {character.status}</h2>\r\n                <h2>Specie: {character.species}</h2>\r\n                <h2>Gender: {character.gender}</h2>\r\n                <h2>Origin: {character.origin?.name}</h2>\r\n                {/*Se pregunta si ya se cargo esta propiedad , entonces que se ejecute y devuelva la propiedad name del origin que es propiedad de character*/}\r\n              </div>\r\n              <img className={styles.imagen} src={character.image} />\r\n            </div>\r\n          ) : (\r\n            <h3 className={styles.h3}>Loading...</h3> //* si todavia no llego la repuesta o se tarda en darnosla entonces renderizamos un \"CARGANDO\".\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Detail;\r\n\r\n{\r\n  /*Este código es el que buscará al personaje de la API cada vez que el componente se monte.*/\r\n}\r\n{\r\n  /*Y luego, cada vez que se desmonte, borrará su información.*/\r\n}\r\n{\r\n  /*operador ternario ? si se cumple la condicion : si no se cumple la condicion*/\r\n}\r\n{\r\n  /*Poner siempre () parentesis cuando se trata de retornar mucho codigo y siempre un div vacio , para que todo ese codigo sea un solo elemento*/\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}