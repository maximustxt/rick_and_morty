{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\FT-M2\\\\rick_and_morty\\\\src\\\\components\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./Form.module.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validacionEmail = (userData, seterrores, errores) => {\n  if (!userData.username && !userData.password) seterrores({\n    ...errores,\n    username: \"Email vacío\",\n    password: \"Contraseña vacia\"\n  }); // se pregunta si en la propiedad usename del estado no hay algo, entonces que tire un error el el stado erores diciendo \"esta vacio\"..\n  else {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username) && /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(userData.password))\n      // de lo contrario que verifique que el usename cumpla con ciertos panoramas como : @ , .com , etc.., de lo contrario tirar otro error diciendo \"es invalido\"\n      seterrores({\n        ...errores,\n        username: \"\",\n        password: \"\"\n      });else seterrores({\n      ...errores,\n      username: \"Email inválido\",\n      password: \"Contraseña invalida\"\n    });\n  }\n};\nconst Form = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [errores, seterrores] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const handleInputChange = event => {\n    const Propiedad = event.target.name; // esto seria el nombre del input osea username o password..\n    const value = event.target.value; // esto seria el valor de la propiedad , osea lo que escribamos en el input..\n    setUserData({\n      ...userData,\n      [Propiedad]: value\n    });\n    validacionEmail({\n      ...userData,\n      [Propiedad]: value\n    }, seterrores, errores);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.div2,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.div,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.div1,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Escribir email aqui...\",\n            value: userData.username,\n            type: \"text\",\n            name: \"username\",\n            onChange: handleInputChange,\n            className: errores.username ? styles.error : styles.correcto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: errores.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.div1,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Escribir contrase\\xF1a aqui...\",\n            value: userData.password,\n            type: \"text\",\n            name: \"password\",\n            onChange: handleInputChange,\n            className: errores.password ? styles.error : styles.correcto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.span,\n            children: errores.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"GVKbCgUVC6mhvtdRiaNn7YQTyfo=\");\n_c = Form;\n{/* className={errores.username ? styles.error : styles.success} ==> entonces aca se pregunta si en el estado de errores en gmail hay algo entonces que se ejecute el estilo de la class error , de lo contrario que se ejecute la class que esta todo correcto*/}\n{/* <span>{errores.username}</span>  ==> Aca creamos un span que nos mostrara el tipo de error al lado del input*/}\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["styles","useState","jsxDEV","_jsxDEV","validacionEmail","userData","seterrores","errores","username","password","test","Form","_s","setUserData","handleInputChange","event","Propiedad","target","name","value","className","div2","children","div","div1","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","error","correcto","span","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/FT-M2/rick_and_morty/src/components/Form/Form.jsx"],"sourcesContent":["import styles from \"./Form.module.css\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst validacionEmail = (userData,seterrores,errores) => {\r\n    if (!userData.username && !userData.password) seterrores({ ...errores, username: \"Email vacío\" , password: \"Contraseña vacia\"}); // se pregunta si en la propiedad usename del estado no hay algo, entonces que tire un error el el stado erores diciendo \"esta vacio\"..\r\n  else {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username) && /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(userData.password)) // de lo contrario que verifique que el usename cumpla con ciertos panoramas como : @ , .com , etc.., de lo contrario tirar otro error diciendo \"es invalido\"\r\n      seterrores({ ...errores, username: \"\" , password: \"\" });\r\n    else seterrores({ ...errores, username: \"Email inválido\" , password: \"Contraseña invalida\" });\r\n  }\r\n}\r\n\r\nconst Form = () => {\r\n    const [userData, setUserData] = useState({ username: \"\", password: \"\" });\r\n    const [errores,seterrores] = useState({ username: \"\", password: \"\" });\r\n\r\n    const handleInputChange = (event) => {\r\n         const Propiedad = event.target.name; // esto seria el nombre del input osea username o password..\r\n         const value = event.target.value;  // esto seria el valor de la propiedad , osea lo que escribamos en el input..\r\n         setUserData({...userData , [Propiedad] : value})\r\n         validacionEmail({...userData , [Propiedad] : value},seterrores,errores);\r\n     }\r\n\r\nreturn (\r\n    <div  className={styles.div2}>\r\n    <div className={styles.div}>\r\n        <form>\r\n            <div className={styles.div1}>\r\n            <label htmlFor=\"username\">Username: </label>\r\n                <input placeholder=\"Escribir email aqui...\"\r\n                value={userData.username}\r\n                type=\"text\" \r\n                name=\"username\"\r\n                onChange={ handleInputChange}\r\n                className={errores.username ? styles.error : styles.correcto} \r\n                ></input>\r\n                <span>{errores.username}</span> \r\n\r\n            </div>\r\n            <div className={styles.div1}>\r\n            <label htmlFor=\"password\">Password: </label>\r\n                <input placeholder=\"Escribir contraseña aqui...\"\r\n                value = {userData.password} \r\n                type=\"text\"\r\n                name=\"password\"\r\n                onChange={ handleInputChange}\r\n                className={errores.password ? styles.error : styles.correcto}\r\n                ></input>\r\n                <span className={styles.span}>{errores.password}</span> \r\n            </div>\r\n        </form>\r\n        <button type=\"submit\" >Login</button>\r\n    </div>\r\n    </div>\r\n)\r\n}\r\n\r\n{/* className={errores.username ? styles.error : styles.success} ==> entonces aca se pregunta si en el estado de errores en gmail hay algo entonces que se ejecute el estilo de la class error , de lo contrario que se ejecute la class que esta todo correcto*/}\r\n{/* <span>{errores.username}</span>  ==> Aca creamos un span que nos mostrara el tipo de error al lado del input*/}\r\n\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}