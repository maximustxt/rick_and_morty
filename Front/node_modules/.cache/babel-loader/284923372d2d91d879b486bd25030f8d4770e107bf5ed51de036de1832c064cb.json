{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\rick_and_morty\\\\Front\\\\src\\\\components\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./Form.module.css\";\nimport { useState } from \"react\";\nimport validacion from \"./validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    login\n  } = _ref;\n  const [userData, setUserData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [errores, seterrores] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const handleInputChange = event => {\n    const Propiedad = event.target.name; // esto seria el nombre del input osea username o password..\n    const value = event.target.value; // esto seria el valor de la propiedad , osea lo que escribamos en el input..\n    setUserData({\n      ...userData,\n      [Propiedad]: value\n    });\n    seterrores(validacion({\n      ...userData,\n      [Propiedad]: value\n    }, errores));\n  };\n  const SubmitHandel = async event => {\n    try {\n      event.preventDefault(); // hace que no se recargue la pagina , por defecto el evento submit recarga la pagina...\n      login(userData);\n      await axios.post(\"http://localhost:3001/favoritos\", userData);\n    } catch (error) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.div2,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.div,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"REGISTRO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: SubmitHandel,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.div1,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            htmlFor: \"username\",\n            children: \"Username :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Escribir email aqui...\",\n            value: userData.username,\n            type: \"text\",\n            name: \"username\",\n            onChange: handleInputChange,\n            className: errores.username ? styles.error : styles.correcto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.span,\n            children: errores.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.div1,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            htmlFor: \"password\",\n            children: [\"Password :\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Escribir contrase\\xF1a aqui...\",\n            value: userData.password,\n            type: \"password\",\n            name: \"password\",\n            onChange: handleInputChange,\n            className: errores.password ? styles.error : styles.correcto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.span,\n            children: errores.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.boton,\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"gdVx8j9RIbSYqWlM53MVG1UKx/w=\");\n_c = Form;\n{\n  /* className={errores.username ? styles.error : styles.success} ==> entonces aca se pregunta si en el estado de errores en gmail hay algo entonces que se ejecute el estilo de la class error , de lo contrario que se ejecute la class que esta todo correcto*/\n}\n{\n  /* <span>{errores.username}</span>  ==> Aca creamos un span que nos mostrara el tipo de error al lado del input*/\n}\n{\n  /*const validacionEmail = (userData,seterrores,errores) => {\r\n    if (!userData.username) seterrores({ ...errores, username: \"Email vacío\"}); // se pregunta si en la propiedad usename del estado no hay algo, entonces que tire un error el el stado erores diciendo \"esta vacio\"..\r\n  else {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username)) // de lo contrario que verifique que el usename cumpla con ciertos panoramas como : @ , .com , etc.., de lo contrario tirar otro error diciendo \"es invalido\"\r\n      seterrores({ ...errores, username: \"\" });\r\n    else seterrores({ ...errores, username: \"Email inválido\" });\r\n  }\r\n  }*/\n}\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["styles","useState","validacion","jsxDEV","_jsxDEV","Form","_ref","_s","login","userData","setUserData","username","password","errores","seterrores","handleInputChange","event","Propiedad","target","name","value","SubmitHandel","preventDefault","axios","post","error","className","div2","children","div","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","div1","label","htmlFor","placeholder","type","onChange","correcto","span","boton","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/rick_and_morty/Front/src/components/Form/Form.jsx"],"sourcesContent":["import styles from \"./Form.module.css\";\r\nimport { useState } from \"react\";\r\nimport validacion from \"./validation\";\r\n\r\nconst Form = ({ login }) => {\r\n  const [userData, setUserData] = useState({ username: \"\", password: \"\" });\r\n  const [errores, seterrores] = useState({ username: \"\", password: \"\" });\r\n\r\n  const handleInputChange = (event) => {\r\n    const Propiedad = event.target.name; // esto seria el nombre del input osea username o password..\r\n    const value = event.target.value; // esto seria el valor de la propiedad , osea lo que escribamos en el input..\r\n    setUserData({ ...userData, [Propiedad]: value });\r\n    seterrores(validacion({ ...userData, [Propiedad]: value }, errores));\r\n  };\r\n  const SubmitHandel = async (event) => {\r\n    try {\r\n      event.preventDefault(); // hace que no se recargue la pagina , por defecto el evento submit recarga la pagina...\r\n      login(userData);\r\n      await axios.post(\"http://localhost:3001/favoritos\", userData);\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <div className={styles.div2}>\r\n      <div className={styles.div}>\r\n        <h1>REGISTRO</h1>\r\n        <form onSubmit={SubmitHandel}>\r\n          {/*Es un eventp de formulario no de button..*/}\r\n          <div className={styles.div1}>\r\n            <label className={styles.label} htmlFor=\"username\">\r\n              Username :\r\n            </label>\r\n            <input\r\n              placeholder=\"Escribir email aqui...\"\r\n              value={userData.username}\r\n              type=\"text\"\r\n              name=\"username\"\r\n              onChange={handleInputChange}\r\n              className={errores.username ? styles.error : styles.correcto}\r\n            ></input>\r\n            <span className={styles.span}>{errores.username}</span>\r\n          </div>\r\n          <div className={styles.div1}>\r\n            <label className={styles.label} htmlFor=\"password\">\r\n              Password :{\" \"}\r\n            </label>\r\n            <input\r\n              placeholder=\"Escribir contraseña aqui...\"\r\n              value={userData.password}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={handleInputChange}\r\n              className={errores.password ? styles.error : styles.correcto}\r\n            ></input>\r\n            <span className={styles.span}>{errores.password}</span>\r\n          </div>\r\n          <button className={styles.boton} type=\"submit\">\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n{\r\n  /* className={errores.username ? styles.error : styles.success} ==> entonces aca se pregunta si en el estado de errores en gmail hay algo entonces que se ejecute el estilo de la class error , de lo contrario que se ejecute la class que esta todo correcto*/\r\n}\r\n{\r\n  /* <span>{errores.username}</span>  ==> Aca creamos un span que nos mostrara el tipo de error al lado del input*/\r\n}\r\n\r\n{\r\n  /*const validacionEmail = (userData,seterrores,errores) => {\r\n    if (!userData.username) seterrores({ ...errores, username: \"Email vacío\"}); // se pregunta si en la propiedad usename del estado no hay algo, entonces que tire un error el el stado erores diciendo \"esta vacio\"..\r\n  else {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username)) // de lo contrario que verifique que el usename cumpla con ciertos panoramas como : @ , .com , etc.., de lo contrario tirar otro error diciendo \"es invalido\"\r\n      seterrores({ ...errores, username: \"\" });\r\n    else seterrores({ ...errores, username: \"Email inválido\" });\r\n  }\r\n}*/\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}