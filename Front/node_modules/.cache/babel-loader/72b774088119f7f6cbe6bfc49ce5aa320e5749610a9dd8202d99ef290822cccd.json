{"ast":null,"code":"const validaciones = (userData, erroresx) => {\n  // username:\n  const errores = {\n    ...erroresx\n  };\n  if (!userData.username) {\n    errores.username = \"Email vacio\";\n  } else if (userData.username.length > 35) {\n    errores.username = \"El email no debe superar los 35 caracteres...\";\n  } else if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username)) {\n    errores.username = \"\";\n  } else {\n    errores.username = \"Email invalido\";\n  }\n\n  //password:\n\n  if (userData.password.length < 6 && userData.password.length > 10) {\n    errores.password = \"La longitud debe ser mayor de 6 y menor a 10 \";\n  } else if (/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(userData.password)) {\n    errores.password = \"\";\n  } else {\n    errores.password = \"password invalida\";\n  }\n  return errores; // retornamos el objeto con los errores modificados..\n};\n\nexport default validaciones;","map":{"version":3,"names":["validaciones","userData","erroresx","errores","username","length","test","password"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/rick_and_morty/Front/src/components/Registro/validaciones.js"],"sourcesContent":["const validaciones = (userData, erroresx) => {\r\n  // username:\r\n  const errores = { ...erroresx };\r\n  if (!userData.username) {\r\n    errores.username = \"Email vacio\";\r\n  } else if (userData.username.length > 35) {\r\n    errores.username = \"El email no debe superar los 35 caracteres...\";\r\n  } else if (\r\n    /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username)\r\n  ) {\r\n    errores.username = \"\";\r\n  } else {\r\n    errores.username = \"Email invalido\";\r\n  }\r\n\r\n  //password:\r\n\r\n  if (userData.password.length < 6 && userData.password.length > 10) {\r\n    errores.password = \"La longitud debe ser mayor de 6 y menor a 10 \";\r\n  } else if (\r\n    /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(userData.password)\r\n  ) {\r\n    errores.password = \"\";\r\n  } else {\r\n    errores.password = \"password invalida\";\r\n  }\r\n  return errores; // retornamos el objeto con los errores modificados..\r\n};\r\n\r\nexport default validaciones;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAC3C;EACA,MAAMC,OAAO,GAAG;IAAE,GAAGD;EAAS,CAAC;EAC/B,IAAI,CAACD,QAAQ,CAACG,QAAQ,EAAE;IACtBD,OAAO,CAACC,QAAQ,GAAG,aAAa;EAClC,CAAC,MAAM,IAAIH,QAAQ,CAACG,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAE;IACxCF,OAAO,CAACC,QAAQ,GAAG,+CAA+C;EACpE,CAAC,MAAM,IACL,6CAA6C,CAACE,IAAI,CAACL,QAAQ,CAACG,QAAQ,CAAC,EACrE;IACAD,OAAO,CAACC,QAAQ,GAAG,EAAE;EACvB,CAAC,MAAM;IACLD,OAAO,CAACC,QAAQ,GAAG,gBAAgB;EACrC;;EAEA;;EAEA,IAAIH,QAAQ,CAACM,QAAQ,CAACF,MAAM,GAAG,CAAC,IAAIJ,QAAQ,CAACM,QAAQ,CAACF,MAAM,GAAG,EAAE,EAAE;IACjEF,OAAO,CAACI,QAAQ,GAAG,+CAA+C;EACpE,CAAC,MAAM,IACL,6CAA6C,CAACD,IAAI,CAACL,QAAQ,CAACM,QAAQ,CAAC,EACrE;IACAJ,OAAO,CAACI,QAAQ,GAAG,EAAE;EACvB,CAAC,MAAM;IACLJ,OAAO,CAACI,QAAQ,GAAG,mBAAmB;EACxC;EACA,OAAOJ,OAAO,CAAC,CAAC;AAClB,CAAC;;AAED,eAAeH,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}