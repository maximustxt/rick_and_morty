{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\rick_and_morty\\\\Front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { Login } from \"./redux/actions\";\nimport Cards from \"./components/Cards/Cards\";\nimport { useState } from \"react\";\nimport { Routes } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\nimport About from \"./components/About/About\";\nimport Detail from \"./components/Detail/Detail\";\nimport Form from \"./components/Form/Form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport Favorites from \"./components/Favoritos/Favorites\";\nimport Registro from \"./components/Registro/Registro\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const idUser = useSelector(state => state.idUser);\n  const [characters, setcharacters] = useState([]);\n  const FuncionCharRandom = () => {\n    const inicioChar = 1;\n    const FinChar = 826; // cantidad de personajes en total.\n\n    const idCharRandom = inicioChar + Math.floor(Math.random() * FinChar);\n    axios.get(`http://localhost:3001/onsearch/${idCharRandom}`).then(response => setcharacters([...characters, {\n      ...response.data\n    }]));\n  };\n  const onSearch = id => {\n    const URL_BASE = \"http://localhost:3001\";\n    if (characters.find(char => char.id === id)) {\n      return alert(\"Personaje repetido\");\n    }\n    fetch(`${URL_BASE}/onsearch/${id}`).then(response => response.json()).then(data => {\n      if (data.name) {\n        setcharacters(oldChars => [...oldChars, data]);\n      } else {\n        swal({\n          text: \"No hay personajes con ese ID\",\n          icon: \"warning\",\n          buttons: \"Aceptar\"\n        });\n      }\n    });\n  };\n  const onClose = id => {\n    setcharacters(characters.filter(char => char.id !== id));\n  };\n  const [access, setaccess] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    !access && navigate(\"/\");\n  }, [access]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: \"25px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Favorites\",\n        element: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          FuncionCharRandom: FuncionCharRandom,\n          idUser: idUser,\n          characters: characters,\n          onClose: onClose,\n          onSearch: onSearch,\n          setcharacters: setcharacters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Registro\",\n        element: /*#__PURE__*/_jsxDEV(Registro, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:id\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          setcharacters: setcharacters,\n          characters: characters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Utr4sep7xGl5pgVqBeNS+Jv57rw=\", false, function () {\n  return [useSelector, useNavigate];\n});\n_c = App;\n{\n  /*le estamos pasando otra props => {character: y onClose:}*/\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Login","Cards","useState","Routes","Route","About","Detail","Form","useNavigate","useEffect","Favorites","Registro","useDispatch","useSelector","axios","swal","jsxDEV","_jsxDEV","App","_s","idUser","state","characters","setcharacters","FuncionCharRandom","inicioChar","FinChar","idCharRandom","Math","floor","random","get","then","response","data","onSearch","id","URL_BASE","find","char","alert","fetch","json","name","oldChars","text","icon","buttons","onClose","filter","access","setaccess","navigate","className","style","padding","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/rick_and_morty/Front/src/App.js"],"sourcesContent":["import \"./App.css\";\r\nimport { Login } from \"./redux/actions\";\r\nimport Cards from \"./components/Cards/Cards\";\r\nimport { useState } from \"react\";\r\nimport { Routes } from \"react-router-dom\";\r\nimport { Route } from \"react-router-dom\";\r\nimport About from \"./components/About/About\";\r\nimport Detail from \"./components/Detail/Detail\";\r\nimport Form from \"./components/Form/Form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Favorites from \"./components/Favoritos/Favorites\";\r\nimport Registro from \"./components/Registro/Registro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction App() {\r\n  const idUser = useSelector((state) => state.idUser);\r\n  const [characters, setcharacters] = useState([]);\r\n\r\n  const FuncionCharRandom = () => {\r\n    const inicioChar = 1;\r\n    const FinChar = 826; // cantidad de personajes en total.\r\n\r\n    const idCharRandom = inicioChar + Math.floor(Math.random() * FinChar);\r\n\r\n    axios\r\n      .get(`http://localhost:3001/onsearch/${idCharRandom}`)\r\n      .then((response) => setcharacters([...characters, { ...response.data }]));\r\n  };\r\n\r\n  const onSearch = (id) => {\r\n    const URL_BASE = \"http://localhost:3001\";\r\n\r\n    if (characters.find((char) => char.id === id)) {\r\n      return alert(\"Personaje repetido\");\r\n    }\r\n\r\n    fetch(`${URL_BASE}/onsearch/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.name) {\r\n          setcharacters((oldChars) => [...oldChars, data]);\r\n        } else {\r\n          swal({\r\n            text: \"No hay personajes con ese ID\",\r\n            icon: \"warning\",\r\n            buttons: \"Aceptar\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const onClose = (id) => {\r\n    setcharacters(characters.filter((char) => char.id !== id));\r\n  };\r\n\r\n  const [access, setaccess] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    !access && navigate(\"/\");\r\n  }, [access]);\r\n\r\n  return (\r\n    <div className=\"App\" style={{ padding: \"25px\" }}>\r\n      {/*Esto es lo que siempre se va a mantener en todos los servidores vigente , pero usamos el hook useLocation para obtener una propiedad que es el nombre de una ruta , la usamos como condicion diciendole que si pathname mo es igual que la ruta de nuestro querido formulario , entonces que se muestre nav en el resto de rutas menos en ese..*/}\r\n      <Routes>\r\n        <Route path=\"/Favorites\" element={<Favorites />}></Route>\r\n        <Route path=\"/about\" element={<About />} />\r\n        <Route\r\n          path=\"/home\"\r\n          element={\r\n            <Cards\r\n              FuncionCharRandom={FuncionCharRandom}\r\n              idUser={idUser}\r\n              characters={characters}\r\n              onClose={onClose}\r\n              onSearch={onSearch}\r\n              setcharacters={setcharacters}\r\n            />\r\n          }\r\n        />\r\n        <Route path=\"/Registro\" element={<Registro />} />\r\n        <Route path=\"/detail/:id\" element={<Detail />} />\r\n        {/* <Route path=\"/\" element={<Inicio FuncionInicio={FuncionInicio} />} /> */}\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <Form setcharacters={setcharacters} characters={characters} />\r\n          }\r\n        />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n{\r\n  /*le estamos pasando otra props => {character: y onClose:}*/\r\n}\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}