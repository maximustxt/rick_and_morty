{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\FT-M2\\\\rick_and_morty\\\\src\\\\components\\\\Card\\\\Card.jsx\",\n  _s2 = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { addFavorite, deleteFavorite } from \"../../redux/actions\";\nimport styles from \"./Card.module.css\"; // el ./ => esto quiere decir que es en la carpeta... ../ sale de la carpeta y entra en la carpeta que le indiquemos => ../Card/Card.jsx\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(_ref) {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    id,\n    name,\n    species,\n    gender,\n    image,\n    onClose\n  } = _ref;\n  const [isFav, setIsFav] = useState(false);\n  const dispatch = useDispatch();\n  // dispatch le enviaba informacion a las actiond para que despues la funcion reduce , cambie o modifique el estado global con esa misma informacion\n\n  const mapDispatchToProps = () => {\n    dispatch(addFavorite());\n    dispatch(deleteFavorite());\n  };\n  const myFavorite = useSelector(state => state.myFavorite);\n  const mapStateToProps = () => {\n    _s();\n    const myFavorite = useSelector(state => state.myFavorite);\n    return myFavorite;\n  };\n  _s(mapStateToProps, \"vkMITXsl3PL6LgUhUdxk3WIMETE=\", false, function () {\n    return [useSelector];\n  });\n  useEffect(() => {\n    myFavorite.forEach(fav => {\n      if (fav.id === props.id) {\n        setIsFav(true);\n      }\n    });\n  }, [myFavorite]);\n  const handleFavorite = props => {\n    if (isFav === true) {\n      setIsFav(false);\n      dispatch(deleteFavorite());\n    } else {\n      setIsFav(true);\n      dispatch(addFavorite());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.contenedor,\n    children: [isFav ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFavorite,\n      children: \"\\u2764\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFavorite,\n      children: \"\\uD83E\\uDD0D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.boton,\n      onClick: () => onClose(id),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/detail/${id}`,\n      className: styles.Link,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Nombre: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.caracter,\n      children: [\"Specie: \", species]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.caracter,\n      children: [\"Genero: \", gender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.img,\n      src: image,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s2(Card, \"q4Thd1Mw67/liMxeAEKdnAKJMx4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Card;\n{/* <Link to={`/detail/${id}`}> esto seria que cuando aga clic en el link me va aparecer el id de cada personaje en un nuevo servidor o Ruta*/}\n{/* pagina the shadow css generator es super util*/}\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["Link","addFavorite","deleteFavorite","styles","useDispatch","useSelector","useState","jsxDEV","_jsxDEV","Card","_ref","_s2","_s","$RefreshSig$","id","name","species","gender","image","onClose","isFav","setIsFav","dispatch","mapDispatchToProps","myFavorite","state","mapStateToProps","useEffect","forEach","fav","props","handleFavorite","className","contenedor","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","boton","to","caracter","img","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/FT-M2/rick_and_morty/src/components/Card/Card.jsx"],"sourcesContent":["import {Link} from \"react-router-dom\";\r\nimport { addFavorite,deleteFavorite } from \"../../redux/actions\";\r\nimport styles from \"./Card.module.css\"; // el ./ => esto quiere decir que es en la carpeta... ../ sale de la carpeta y entra en la carpeta que le indiquemos => ../Card/Card.jsx\r\nimport { useDispatch , useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function Card ({id,name,species,gender,image,onClose}){\r\n\r\n    const [isFav , setIsFav] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    // dispatch le enviaba informacion a las actiond para que despues la funcion reduce , cambie o modifique el estado global con esa misma informacion\r\n\r\n   const mapDispatchToProps = () => {\r\n     dispatch(addFavorite());\r\n     dispatch(deleteFavorite()); \r\n   }\r\n   const myFavorite = useSelector(state => state.myFavorite);\r\n\r\n    const mapStateToProps = ()=> {\r\n        const myFavorite = useSelector(state => state.myFavorite);\r\n        return myFavorite\r\n   }\r\n   useEffect(() => {\r\n    myFavorite.forEach((fav) => {\r\n       if (fav.id === props.id) {\r\n          setIsFav(true);\r\n       }\r\n    });\r\n }, [myFavorite]);\r\n\r\n   const handleFavorite = (props) => {\r\n    if(isFav === true){\r\n        setIsFav(false);\r\n        dispatch(deleteFavorite());\r\n    } else {\r\n        setIsFav(true);\r\n        dispatch(addFavorite());\r\n    }\r\n   }\r\n\r\n    \r\n    return (\r\n        <div className={styles.contenedor}>\r\n            {\r\n   isFav ? (\r\n      <button onClick={handleFavorite}>‚ù§Ô∏è</button>\r\n   ) : (\r\n      <button onClick={handleFavorite}>ü§ç</button>\r\n   )\r\n}\r\n            <button className={styles.boton} onClick={()=>onClose(id)}>X</button>\r\n             <Link to={`/detail/${id}`} className={styles.Link}>  \r\n            <h2>Nombre: {name}</h2>\r\n            </Link> \r\n            <h2 className={styles.caracter} >Specie: {species}</h2>\r\n            <h2 className={styles.caracter} >Genero: {gender}</h2>\r\n            <img  className={styles.img} src={image} alt=\"\"/>\r\n        </div>\r\n    )\r\n    }\r\n\r\n    \r\n    {/* <Link to={`/detail/${id}`}> esto seria que cuando aga clic en el link me va aparecer el id de cada personaje en un nuevo servidor o Ruta*/}\r\n    {/* pagina the shadow css generator es super util*/}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}