{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\FT-M2\\\\rick_and_morty\\\\src\\\\components\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./Form.module.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    username: '',\n    password: ''\n  });\n  const [errores, seterrores] = useState({\n    username: '',\n    password: ''\n  });\n  const handleInputChange = event => {\n    const Propiedad = event.target.name; // esto seria el nombre del input osea username o password..\n    const value = event.target.value; // esto seria el valor de la propiedad , osea lo que escribamos en el input..\n    setUserData({\n      ...userData,\n      [Propiedad]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.div2,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.div,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.div1,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Escribir email aqui...\",\n            value: userData.username,\n            type: \"text\",\n            name: \"username\",\n            onChange: handleInputChange,\n            className: errores.username ? styles.error : styles.success // entonces aca se pregunta si en el estado de errores en gmail hay algo entonces que se ejecute el estilo de la class error , de lo contrario que se ejecute la class que esta todo correcto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: errores.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.div1,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Escribir contrase\\xF1a aqui...\",\n            value: userData.password,\n            type: \"text\",\n            name: \"password\",\n            onChange: handleInputChange,\n            className: errores.password ? styles.error : styles.success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: errores.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"juwFxn2QQ0KlG0moKi7FLK5ebHI=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["styles","useState","jsxDEV","_jsxDEV","Form","_s","userData","setUserData","username","password","errores","seterrores","handleInputChange","event","Propiedad","target","name","value","className","div2","children","div","div1","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","error","success","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/FT-M2/rick_and_morty/src/components/Form/Form.jsx"],"sourcesContent":["import styles from \"./Form.module.css\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst Form = () => {\r\n    const [userData, setUserData] = useState({ username: '', password: '' });\r\n    const [errores,seterrores] = useState({ username: '', password: '' });\r\n\r\n    const handleInputChange = (event) => {\r\n         const Propiedad = event.target.name; // esto seria el nombre del input osea username o password..\r\n         const value = event.target.value;  // esto seria el valor de la propiedad , osea lo que escribamos en el input..\r\n         setUserData({...userData , [Propiedad] : value})\r\n     }\r\n\r\nreturn (\r\n    <div  className={styles.div2}>\r\n    <div className={styles.div}>\r\n        <form>\r\n            <div className={styles.div1}>\r\n            <label htmlFor=\"username\">Username: </label>\r\n                <input placeholder=\"Escribir email aqui...\"\r\n                value={userData.username}\r\n                type=\"text\" \r\n                name=\"username\"\r\n                onChange={ handleInputChange}\r\n                className={errores.username ? styles.error : styles.success} // entonces aca se pregunta si en el estado de errores en gmail hay algo entonces que se ejecute el estilo de la class error , de lo contrario que se ejecute la class que esta todo correcto\r\n                ></input>\r\n                <span>{errores.username}</span> {/*Aca creamos un span que nos mostrara el tipo de error al lado del input*/}\r\n\r\n            </div>\r\n            <div className={styles.div1}>\r\n            <label htmlFor=\"password\">Password: </label>\r\n                <input placeholder=\"Escribir contraseÃ±a aqui...\"\r\n                value = {userData.password} \r\n                type=\"text\"\r\n                name=\"password\"\r\n                onChange={ handleInputChange}\r\n                className={errores.password ? styles.error : styles.success}\r\n                ></input>\r\n                <span>{errores.password}</span> \r\n            </div>\r\n        </form>\r\n        <button type=\"submit\" >Login</button>\r\n    </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}