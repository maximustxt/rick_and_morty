{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\rick_and_morty\\\\Front\\\\src\\\\components\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { getFavorites, Login } from \"../../redux/actions\";\nimport styles from \"./Card.module.css\"; // el ./ => esto quiere decir que es en la carpeta... ../ sale de la carpeta y entra en la carpeta que le indiquemos => ../Card/Card.jsx\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(_ref) {\n  _s();\n  let {\n    id,\n    name,\n    species,\n    gender,\n    image,\n    onClose,\n    idUser\n  } = _ref;\n  const [isFav, setIsFav] = useState(false);\n  const dispatch = useDispatch();\n  const myFavorites = useSelector(state => state.myFavorites);\n  const character = {\n    name,\n    species,\n    gender,\n    image,\n    idUser\n  };\n  const obj = {\n    id,\n    idUser\n  };\n  const addFavorite = async character => {\n    console.log(character);\n    try {\n      await axios.post(\"http://localhost:3001/favoritos\", character); // character sweia el body que luego lo usamos en nuestro servidor y aparte character es lo que le pasamos como argumento a esta funcion cuando hacemos la funcion handleFavorite ===> character ===> addFavorite({ id, name, species, gender, image }).\n      alert(\"Personaje agregado como Favorito\");\n      dispatch(getFavorites(idUser));\n    } catch (error) {\n      alert(error.response.data.error);\n    }\n  };\n\n  // dispatch(getFavorites(idUser));\n\n  const deleteFavorite = async (id, idUser) => {\n    console.log(idUser);\n    try {\n      await axios.delete(`http://localhost:3001/favoritos/${id}?idUser=${idUser}`); // character sweia el body que luego lo usamos en nuestro servidor y aparte character es lo que le pasamos como argumento a esta funcion cuando hacemos la funcion handleFavorite ===> character ===> addFavorite({ id, name, species, gender, image }).\n      alert(\"Card eliminada con exito!!\");\n    } catch (error) {\n      alert(error.response.data.error);\n    }\n  };\n  //dispatch le enviaba informacion a las actiond para que despues la funcion reduce , cambie o modifique el estado global con esa misma informacion\n\n  useEffect(() => {\n    myFavorites.forEach(fav => {\n      if (fav.id === id) {\n        setIsFav(true);\n      }\n    });\n  }, [myFavorites]);\n  const handleFavorite = obj => {\n    if (isFav === true) {\n      setIsFav(false);\n      deleteFavorite(id, idUser); // esto le manda a action ==> {type: delete , payload : id que nos dan por aca..}\n    } else {\n      setIsFav(true);\n      addFavorite(character);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.contenedor,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.divBoton,\n      children: [isFav ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.boton11,\n        onClick: handleFavorite,\n        children: \"\\u2764\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.boton11,\n        onClick: () => handleFavorite(obj),\n        children: \"\\uD83E\\uDD0D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.boton,\n        onClick: () => onClose(id),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/detail/${id}`,\n      className: styles.Link,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Nombre: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.caracter,\n      children: [\"Specie: \", species]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.caracter,\n      children: [\"Genero: \", gender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.img,\n      src: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n// traemos el state global de redux , esto no los brinda la funcion conecct()..\n// y luego esto lo tenemos como props en nuestro componentes Card..\n_s(Card, \"OJHmQ3tms83RCQCNubx8vTl2aSs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Card;\nexport default Card;\n{\n  /* <Link to={`/detail/${id}`}> esto seria que cuando aga clic en el link me va aparecer el id de cada personaje en un nuevo servidor o Ruta*/\n}\n{\n  /* pagina the shadow css generator es super util*/\n}\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["Link","getFavorites","Login","styles","useDispatch","useSelector","React","useState","useEffect","axios","jsxDEV","_jsxDEV","Card","_ref","_s","id","name","species","gender","image","onClose","idUser","isFav","setIsFav","dispatch","myFavorites","state","character","obj","addFavorite","console","log","post","alert","error","response","data","deleteFavorite","delete","forEach","fav","handleFavorite","className","contenedor","children","divBoton","boton11","onClick","fileName","_jsxFileName","lineNumber","columnNumber","boton","to","caracter","img","src","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/rick_and_morty/Front/src/components/Card/Card.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { getFavorites, Login } from \"../../redux/actions\";\r\nimport styles from \"./Card.module.css\"; // el ./ => esto quiere decir que es en la carpeta... ../ sale de la carpeta y entra en la carpeta que le indiquemos => ../Card/Card.jsx\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Card({ id, name, species, gender, image, onClose, idUser }) {\r\n  const [isFav, setIsFav] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const myFavorites = useSelector((state) => state.myFavorites);\r\n  const character = { name, species, gender, image, idUser };\r\n  const obj = { id, idUser };\r\n\r\n  const addFavorite = async (character) => {\r\n    console.log(character);\r\n    try {\r\n      await axios.post(\"http://localhost:3001/favoritos\", character); // character sweia el body que luego lo usamos en nuestro servidor y aparte character es lo que le pasamos como argumento a esta funcion cuando hacemos la funcion handleFavorite ===> character ===> addFavorite({ id, name, species, gender, image }).\r\n      alert(\"Personaje agregado como Favorito\");\r\n      dispatch(getFavorites(idUser));\r\n    } catch (error) {\r\n      alert(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  // dispatch(getFavorites(idUser));\r\n\r\n  const deleteFavorite = async (id, idUser) => {\r\n    console.log(idUser);\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:3001/favoritos/${id}?idUser=${idUser}`\r\n      ); // character sweia el body que luego lo usamos en nuestro servidor y aparte character es lo que le pasamos como argumento a esta funcion cuando hacemos la funcion handleFavorite ===> character ===> addFavorite({ id, name, species, gender, image }).\r\n      alert(\"Card eliminada con exito!!\");\r\n    } catch (error) {\r\n      alert(error.response.data.error);\r\n    }\r\n  };\r\n  //dispatch le enviaba informacion a las actiond para que despues la funcion reduce , cambie o modifique el estado global con esa misma informacion\r\n\r\n  useEffect(() => {\r\n    myFavorites.forEach((fav) => {\r\n      if (fav.id === id) {\r\n        setIsFav(true);\r\n      }\r\n    });\r\n  }, [myFavorites]);\r\n\r\n  const handleFavorite = (obj) => {\r\n    if (isFav === true) {\r\n      setIsFav(false);\r\n      deleteFavorite(id, idUser); // esto le manda a action ==> {type: delete , payload : id que nos dan por aca..}\r\n    } else {\r\n      setIsFav(true);\r\n      addFavorite(character);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.contenedor}>\r\n      <div className={styles.divBoton}>\r\n        {isFav ? (\r\n          <button className={styles.boton11} onClick={handleFavorite}>\r\n            ‚ù§Ô∏è\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className={styles.boton11}\r\n            onClick={() => handleFavorite(obj)}\r\n          >\r\n            ü§ç\r\n          </button>\r\n        )}\r\n        <button className={styles.boton} onClick={() => onClose(id)}>\r\n          X\r\n        </button>\r\n      </div>\r\n      <Link to={`/detail/${id}`} className={styles.Link}>\r\n        <h2>Nombre: {name}</h2>\r\n      </Link>\r\n      <h2 className={styles.caracter}>Specie: {species}</h2>\r\n      <h2 className={styles.caracter}>Genero: {gender}</h2>\r\n      <img className={styles.img} src={image} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// traemos el state global de redux , esto no los brinda la funcion conecct()..\r\n// y luego esto lo tenemos como props en nuestro componentes Card..\r\n\r\nexport default Card;\r\n\r\n{\r\n  /* <Link to={`/detail/${id}`}> esto seria que cuando aga clic en el link me va aparecer el id de cada personaje en un nuevo servidor o Ruta*/\r\n}\r\n{\r\n  /* pagina the shadow css generator es super util*/\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}