{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\FT-M2\\\\rick_and_morty\\\\src\\\\components\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./Form.module.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validacionEmail = (userData, seterrores, errores) => {\n  if (!userData.usename && !userData.password) seterrores({\n    ...errores,\n    usename: \"Email vacío\",\n    password: \"Contraseña vacio\"\n  }); // se pregunta si en la propiedad usename del estado no hay algo, entonces que tire un error el el stado erores diciendo \"esta vacio\"..\n  else {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.usename) && /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&]{8,15}/.test(userData.password))\n      // de lo contrario que verifique que el usename cumpla con ciertos panoramas como : @ , .com , etc.., de lo contrario tirar otro error diciendo \"es invalido\"\n      seterrores({\n        ...errores,\n        usename: \"\",\n        password: \"\"\n      });else seterrores({\n      ...errores,\n      usename: \"Email inválido\",\n      password: \"Contraseña invalida\"\n    });\n  }\n};\nconst validacionPassword = (userData, seterrores, errores) => {\n  if (!userData.password) seterrores({\n    ...errores,\n    password: \"Contraseña vacía\"\n  });else {\n    if (/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&]{8,15}/.test(userData.password)) seterrores({\n      ...errores,\n      password: \"\"\n    });else seterrores({\n      ...errores,\n      password: \"Contraseña inválida\"\n    });\n  }\n};\nconst Form = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    username: '',\n    password: ''\n  });\n  const [errores, seterrores] = useState({\n    username: '',\n    password: ''\n  });\n  const handleInputChange = event => {\n    const Propiedad = event.target.name; // esto seria el nombre del input osea username o password..\n    const value = event.target.value; // esto seria el valor de la propiedad , osea lo que escribamos en el input..\n    setUserData({\n      ...userData,\n      [Propiedad]: value\n    });\n    validacionEmail({\n      ...userData,\n      [Propiedad]: value\n    }, seterrores, errores);\n    validacionPassword({\n      ...userData,\n      [Propiedad]: value\n    }, seterrores, errores);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.div2,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.div,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.div1,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Escribir email aqui...\",\n            value: userData.username,\n            type: \"text\",\n            name: \"username\",\n            onChange: handleInputChange,\n            className: errores.username ? styles.error : styles.success // entonces aca se pregunta si en el estado de errores en gmail hay algo entonces que se ejecute el estilo de la class error , de lo contrario que se ejecute la class que esta todo correcto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: errores.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.div1,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Escribir contrase\\xF1a aqui...\",\n            value: userData.password,\n            type: \"text\",\n            name: \"password\",\n            onChange: handleInputChange,\n            className: errores.password ? styles.error : styles.success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: errores.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"juwFxn2QQ0KlG0moKi7FLK5ebHI=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["styles","useState","jsxDEV","_jsxDEV","validacionEmail","userData","seterrores","errores","usename","password","test","validacionPassword","Form","_s","setUserData","username","handleInputChange","event","Propiedad","target","name","value","className","div2","children","div","div1","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","error","success","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/FT-M2/rick_and_morty/src/components/Form/Form.jsx"],"sourcesContent":["import styles from \"./Form.module.css\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst validacionEmail = (userData,seterrores,errores) => {\r\n    if (!userData.usename && !userData.password) seterrores({ ...errores, usename: \"Email vacío\" , password: \"Contraseña vacio\"}); // se pregunta si en la propiedad usename del estado no hay algo, entonces que tire un error el el stado erores diciendo \"esta vacio\"..\r\n  else {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.usename) && /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&]{8,15}/.test(userData.password)) // de lo contrario que verifique que el usename cumpla con ciertos panoramas como : @ , .com , etc.., de lo contrario tirar otro error diciendo \"es invalido\"\r\n      seterrores({ ...errores, usename: \"\" , password: \"\" });\r\n    else seterrores({ ...errores, usename: \"Email inválido\" , password: \"Contraseña invalida\" });\r\n  }\r\n}\r\nconst validacionPassword = (userData,seterrores,errores) => {\r\n    if (!userData.password) seterrores({ ...errores, password: \"Contraseña vacía\" });\r\n  else {\r\n    if (/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&]{8,15}/.test(userData.password))\r\n      seterrores({ ...errores, password: \"\" });\r\n    else seterrores({ ...errores, password: \"Contraseña inválida\" });\r\n  }\r\n}\r\n\r\n\r\nconst Form = () => {\r\n    const [userData, setUserData] = useState({ username: '', password: '' });\r\n    const [errores,seterrores] = useState({ username: '', password: '' });\r\n\r\n    const handleInputChange = (event) => {\r\n         const Propiedad = event.target.name; // esto seria el nombre del input osea username o password..\r\n         const value = event.target.value;  // esto seria el valor de la propiedad , osea lo que escribamos en el input..\r\n         setUserData({...userData , [Propiedad] : value})\r\n         validacionEmail({...userData , [Propiedad] : value},seterrores,errores);\r\n         validacionPassword({...userData , [Propiedad] : value},seterrores,errores);\r\n     }\r\n\r\nreturn (\r\n    <div  className={styles.div2}>\r\n    <div className={styles.div}>\r\n        <form>\r\n            <div className={styles.div1}>\r\n            <label htmlFor=\"username\">Username: </label>\r\n                <input placeholder=\"Escribir email aqui...\"\r\n                value={userData.username}\r\n                type=\"text\" \r\n                name=\"username\"\r\n                onChange={ handleInputChange}\r\n                className={errores.username ? styles.error : styles.success} // entonces aca se pregunta si en el estado de errores en gmail hay algo entonces que se ejecute el estilo de la class error , de lo contrario que se ejecute la class que esta todo correcto\r\n                ></input>\r\n                <span>{errores.username}</span> {/*Aca creamos un span que nos mostrara el tipo de error al lado del input*/}\r\n\r\n            </div>\r\n            <div className={styles.div1}>\r\n            <label htmlFor=\"password\">Password: </label>\r\n                <input placeholder=\"Escribir contraseña aqui...\"\r\n                value = {userData.password} \r\n                type=\"text\"\r\n                name=\"password\"\r\n                onChange={ handleInputChange}\r\n                className={errores.password ? styles.error : styles.success}\r\n                ></input>\r\n                <span>{errores.password}</span> \r\n            </div>\r\n        </form>\r\n        <button type=\"submit\" >Login</button>\r\n    </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}