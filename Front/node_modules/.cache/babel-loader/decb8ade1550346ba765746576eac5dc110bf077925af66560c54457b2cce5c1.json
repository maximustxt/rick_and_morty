{"ast":null,"code":"import axios from \"axios\";\nexport const FILTER = \"FILTER\";\nexport const ORDER = \"ORDER\";\nexport const LOGIN = \"LOGIN\";\nexport const GET_FAVORITES = \"GET_FAVORITES\";\nexport const getFavorites = idUser => {\n  // console.log(idUser);\n  return async function (dispatch) {\n    const URL_BASE = \"http://localhost:3001\";\n    try {\n      const response = await axios.get(`${URL_BASE}/favoritos?idUser=${idUser}`);\n      dispatch({\n        type: GET_FAVORITES,\n        payload: response.data\n      });\n    } catch (error) {\n      if (error.response && error.response.status === 500) {\n        //* cuando me tiraba el error de estado 500 cuando hacia el dispatch del get , aca lo que hago es preguntar por ese error y setear el peyload en un array vacio , de esta manera no mostrara mas la card ultima cundo sea eliminada\n        dispatch({\n          type: GET_FAVORITES,\n          payload: []\n        });\n      } else {\n        //* de lo contrario tirrar el error normal y corriente de catch..\n        throw error;\n      }\n      alert(error.response.data.error);\n    }\n  };\n};\nexport const Login = (username, password) => {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`http://localhost:3001/login?username=${username}&password=${password}`);\n      if (response.data.access === true) {\n        dispatch({\n          type: LOGIN,\n          payload: response.data.dataValues.id\n        });\n      }\n    } catch (error) {\n      alert(error.response.data.error);\n    }\n  };\n};\n_c = Login;\nexport const filterCards = gender => {\n  return {\n    type: FILTER,\n    payload: gender\n  };\n};\nexport const orderCards = id => {\n  return {\n    type: ORDER,\n    payload: id\n  };\n};\nexport const RemplaceFav = Array => {\n  return {\n    type: REMPLACE_FAV,\n    payload: Array\n  };\n};\n_c2 = RemplaceFav;\n{\n  /*A la funcion delteFavorite recibe el id de los personajes y addFavorite recibe un personaje*/\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"RemplaceFav\");","map":{"version":3,"names":["axios","FILTER","ORDER","LOGIN","GET_FAVORITES","getFavorites","idUser","dispatch","URL_BASE","response","get","type","payload","data","error","status","alert","Login","username","password","access","dataValues","id","_c","filterCards","gender","orderCards","RemplaceFav","Array","REMPLACE_FAV","_c2","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/rick_and_morty/Front/src/redux/actions.js"],"sourcesContent":["import axios from \"axios\";\r\nexport const FILTER = \"FILTER\";\r\nexport const ORDER = \"ORDER\";\r\nexport const LOGIN = \"LOGIN\";\r\nexport const GET_FAVORITES = \"GET_FAVORITES\";\r\n\r\nexport const getFavorites = (idUser) => {\r\n  // console.log(idUser);\r\n  return async function (dispatch) {\r\n    const URL_BASE = \"http://localhost:3001\";\r\n    try {\r\n      const response = await axios.get(\r\n        `${URL_BASE}/favoritos?idUser=${idUser}`\r\n      );\r\n      dispatch({ type: GET_FAVORITES, payload: response.data });\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 500) {\r\n        //* cuando me tiraba el error de estado 500 cuando hacia el dispatch del get , aca lo que hago es preguntar por ese error y setear el peyload en un array vacio , de esta manera no mostrara mas la card ultima cundo sea eliminada\r\n        dispatch({ type: GET_FAVORITES, payload: [] });\r\n      } else {\r\n        //* de lo contrario tirrar el error normal y corriente de catch..\r\n        throw error;\r\n      }\r\n      alert(error.response.data.error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const Login = (username, password) => {\r\n  return async function (dispatch) {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3001/login?username=${username}&password=${password}`\r\n      );\r\n      if (response.data.access === true) {\r\n        dispatch({ type: LOGIN, payload: response.data.dataValues.id });\r\n      }\r\n    } catch (error) {\r\n      alert(error.response.data.error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const filterCards = (gender) => {\r\n  return { type: FILTER, payload: gender };\r\n};\r\n\r\nexport const orderCards = (id) => {\r\n  return { type: ORDER, payload: id };\r\n};\r\n\r\nexport const RemplaceFav = (Array) => {\r\n  return { type: REMPLACE_FAV, payload: Array };\r\n};\r\n\r\n{\r\n  /*A la funcion delteFavorite recibe el id de los personajes y addFavorite recibe un personaje*/\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,MAAM,GAAG,QAAQ;AAC9B,OAAO,MAAMC,KAAK,GAAG,OAAO;AAC5B,OAAO,MAAMC,KAAK,GAAG,OAAO;AAC5B,OAAO,MAAMC,aAAa,GAAG,eAAe;AAE5C,OAAO,MAAMC,YAAY,GAAIC,MAAM,IAAK;EACtC;EACA,OAAO,gBAAgBC,QAAQ,EAAE;IAC/B,MAAMC,QAAQ,GAAG,uBAAuB;IACxC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC7B,GAAEF,QAAS,qBAAoBF,MAAO,EAAC,CACzC;MACDC,QAAQ,CAAC;QAAEI,IAAI,EAAEP,aAAa;QAAEQ,OAAO,EAAEH,QAAQ,CAACI;MAAK,CAAC,CAAC;IAC3D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAIA,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;QACnD;QACAR,QAAQ,CAAC;UAAEI,IAAI,EAAEP,aAAa;UAAEQ,OAAO,EAAE;QAAG,CAAC,CAAC;MAChD,CAAC,MAAM;QACL;QACA,MAAME,KAAK;MACb;MACAE,KAAK,CAACF,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;IAClC;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAC3C,OAAO,gBAAgBZ,QAAQ,EAAE;IAC/B,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC7B,wCAAuCQ,QAAS,aAAYC,QAAS,EAAC,CACxE;MACD,IAAIV,QAAQ,CAACI,IAAI,CAACO,MAAM,KAAK,IAAI,EAAE;QACjCb,QAAQ,CAAC;UAAEI,IAAI,EAAER,KAAK;UAAES,OAAO,EAAEH,QAAQ,CAACI,IAAI,CAACQ,UAAU,CAACC;QAAG,CAAC,CAAC;MACjE;IACF,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdE,KAAK,CAACF,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;IAClC;EACF,CAAC;AACH,CAAC;AAACS,EAAA,GAbWN,KAAK;AAelB,OAAO,MAAMO,WAAW,GAAIC,MAAM,IAAK;EACrC,OAAO;IAAEd,IAAI,EAAEV,MAAM;IAAEW,OAAO,EAAEa;EAAO,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIJ,EAAE,IAAK;EAChC,OAAO;IAAEX,IAAI,EAAET,KAAK;IAAEU,OAAO,EAAEU;EAAG,CAAC;AACrC,CAAC;AAED,OAAO,MAAMK,WAAW,GAAIC,KAAK,IAAK;EACpC,OAAO;IAAEjB,IAAI,EAAEkB,YAAY;IAAEjB,OAAO,EAAEgB;EAAM,CAAC;AAC/C,CAAC;AAACE,GAAA,GAFWH,WAAW;AAIxB;EACE;AAAA;AACD,IAAAJ,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}