{"ast":null,"code":"import { FILTER, ORDER, GET_FAVORITES } from \"./actions\";\nconst initialState = {\n  myFavorites: [],\n  allCharacters: []\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n  switch (actions.type) {\n    case GET_FAVORITES:\n      return {\n        ...state,\n        myFavorites: [...state.allCharacters, ...actions.payload] //* aca si hago [...state.myFavorites, actions.payload] se va a crear un array nuevo donde dentro van haber elementos y otro array que seria actions.payload..\n      };\n\n    case FILTER:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(pars => pars.gender === actions.payload)\n      };\n    case ORDER:\n      return {\n        ...state,\n        // si algunos de los casos se cumplio myFavorites pasa a ser el array modificado y ordenado... [id 1 , id 2 , id3] , luego en el componente Favorites.jsx recorro este array y voy renderizando cada personaje en base a su orden...\n        myFavorites: actions.payload === \"Descendente\" ? [...state.myFavorites].sort((a, b) => b.id - a.id) // si b es menor al a ===> decendente..\n        : [...state.myFavorites].sort((a, b) => a.id - b.id) // si a es menor a b ===> acendente... y el metodo sort devuelve un nuevo array con los elementos ordenados..\n      };\n\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;","map":{"version":3,"names":["FILTER","ORDER","GET_FAVORITES","initialState","myFavorites","allCharacters","reducer","state","arguments","length","undefined","actions","type","payload","filter","pars","gender","sort","a","b","id"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/rick_and_morty/Front/src/redux/reducer.js"],"sourcesContent":["import { FILTER, ORDER, GET_FAVORITES } from \"./actions\";\r\n\r\nconst initialState = {\r\n  myFavorites: [],\r\n  allCharacters: [],\r\n};\r\n\r\nconst reducer = (state = initialState, actions) => {\r\n  switch (actions.type) {\r\n    case GET_FAVORITES:\r\n      return {\r\n        ...state,\r\n        myFavorites: [...state.allCharacters, ...actions.payload], //* aca si hago [...state.myFavorites, actions.payload] se va a crear un array nuevo donde dentro van haber elementos y otro array que seria actions.payload..\r\n      };\r\n    case FILTER:\r\n      return {\r\n        ...state,\r\n        myFavorites: state.myFavorites.filter(\r\n          (pars) => pars.gender === actions.payload\r\n        ),\r\n      };\r\n    case ORDER:\r\n      return {\r\n        ...state,\r\n\r\n        // si algunos de los casos se cumplio myFavorites pasa a ser el array modificado y ordenado... [id 1 , id 2 , id3] , luego en el componente Favorites.jsx recorro este array y voy renderizando cada personaje en base a su orden...\r\n        myFavorites:\r\n          actions.payload === \"Descendente\"\r\n            ? [...state.myFavorites].sort((a, b) => b.id - a.id) // si b es menor al a ===> decendente..\r\n            : [...state.myFavorites].sort((a, b) => a.id - b.id), // si a es menor a b ===> acendente... y el metodo sort devuelve un nuevo array con los elementos ordenados..\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,aAAa,QAAQ,WAAW;AAExD,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAmC;EAAA,IAAlCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,OAAO,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC5C,QAAQC,OAAO,CAACC,IAAI;IAClB,KAAKV,aAAa;MAChB,OAAO;QACL,GAAGK,KAAK;QACRH,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACF,aAAa,EAAE,GAAGM,OAAO,CAACE,OAAO,CAAC,CAAE;MAC7D,CAAC;;IACH,KAAKb,MAAM;MACT,OAAO;QACL,GAAGO,KAAK;QACRH,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACU,MAAM,CAClCC,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAKL,OAAO,CAACE,OAAO;MAE7C,CAAC;IACH,KAAKZ,KAAK;MACR,OAAO;QACL,GAAGM,KAAK;QAER;QACAH,WAAW,EACTO,OAAO,CAACE,OAAO,KAAK,aAAa,GAC7B,CAAC,GAAGN,KAAK,CAACH,WAAW,CAAC,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,EAAE,GAAGF,CAAC,CAACE,EAAE,CAAC,CAAC;QAAA,EACnD,CAAC,GAAGb,KAAK,CAACH,WAAW,CAAC,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,CAAC,CAAE;MAC5D,CAAC;;IACH;MACE,OAAO;QAAE,GAAGb;MAAM,CAAC;EAAC;AAE1B,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}