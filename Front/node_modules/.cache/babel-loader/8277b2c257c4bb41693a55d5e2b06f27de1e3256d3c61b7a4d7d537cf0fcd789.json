{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\FT-M2\\\\rick_and_morty\\\\src\\\\components\\\\Card\\\\Card.jsx\";\nimport { Link } from \"react-router-dom\";\nimport { addFavorite, deleteFavorite } from \"../../redux/actions\";\nimport styles from \"./Card.module.css\"; // el ./ => esto quiere decir que es en la carpeta... ../ sale de la carpeta y entra en la carpeta que le indiquemos => ../Card/Card.jsx\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { Connect } from \"react-redux\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFav: false\n    };\n  }\n  render() {\n    const handleFavorite = () => {\n      if (this.state.isFav === true) {\n        this.setState(false);\n        this.props.deleteFavorite(this.props.id);\n      } else {\n        this.setState(true);\n        this.props.addFavorite(this.props);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.contenedor,\n        children: [this.state.isFav ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFavorite,\n          children: \"\\u2764\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFavorite,\n          children: \"\\uD83E\\uDD0D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.boton,\n          onClick: () => this.props.onClose(this.props.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/detail/${this.props.id}`,\n          className: styles.Link,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Nombre: \", this.props.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.caracter,\n          children: [\"Specie: \", this.props.species]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.caracter,\n          children: [\"Genero: \", this.props.gender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.img,\n          src: this.props.image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    myFavorite: this.state.myFavorite\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    addFavorite: () => {\n      dispatch(addFavorite());\n    },\n    deleteFavorite: () => {\n      dispatch(deleteFavorite());\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n\n// export default function Card ({id,name,species,gender,image,onClose}){\n\n//     const [isFav , setIsFav] = useState(false);\n\n//     const dispatch = useDispatch();\n//     // dispatch le enviaba informacion a las actiond para que despues la funcion reduce , cambie o modifique el estado global con esa misma informacion\n\n//    const myFavorite = useSelector(state => state.myFavorite);\n\n//    useEffect(() => {\n//     for(let i = 0; i<myFavorite.length; i++){\n//         if(myFavorite[i].id === props.id){\n//             setIsFav(true);\n//         }\n//     }\n//     // mapStateToProps().forEach((fav) => {\n//     //    if (fav.id === props.id) {\n//     //       setIsFav(true);\n//     //    }\n//     // });\n//  }, [myFavorite]);\n\n//    const handleFavorite = (props) => {\n//     if(isFav === true){\n//         setIsFav(false);\n//         dispatch(deleteFavorite());\n//     } else {\n//         setIsFav(true);\n//         dispatch(addFavorite());\n//     }\n//    }\n\n//     return (\n//         <div className={styles.contenedor}>\n//             {\n//    isFav ? (\n//       <button onClick={handleFavorite}>‚ù§Ô∏è</button>\n//    ) : (\n//       <button onClick={handleFavorite}>ü§ç</button>\n//    )\n// }\n//             <button className={styles.boton} onClick={()=>onClose(id)}>X</button>\n//              <Link to={`/detail/${id}`} className={styles.Link}>  \n//             <h2>Nombre: {name}</h2>\n//             </Link> \n//             <h2 className={styles.caracter} >Specie: {species}</h2>\n//             <h2 className={styles.caracter} >Genero: {gender}</h2>\n//             <img  className={styles.img} src={image} alt=\"\"/>\n//         </div>\n//     )\n//     }\n\n{/* <Link to={`/detail/${id}`}> esto seria que cuando aga clic en el link me va aparecer el id de cada personaje en un nuevo servidor o Ruta*/}\n{/* pagina the shadow css generator es super util*/}","map":{"version":3,"names":["Link","addFavorite","deleteFavorite","styles","connect","useDispatch","useSelector","useState","Connect","React","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","Component","constructor","props","state","isFav","render","handleFavorite","setState","id","children","className","contenedor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","boton","onClose","to","name","caracter","species","gender","img","src","image","alt","mapStateToProps","myFavorite","mapDispatchToProps","dispatch"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/FT-M2/rick_and_morty/src/components/Card/Card.jsx"],"sourcesContent":["import {Link} from \"react-router-dom\";\r\nimport { addFavorite,deleteFavorite } from \"../../redux/actions\";\r\nimport styles from \"./Card.module.css\"; // el ./ => esto quiere decir que es en la carpeta... ../ sale de la carpeta y entra en la carpeta que le indiquemos => ../Card/Card.jsx\r\nimport { connect, useDispatch , useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { Connect } from \"react-redux\";\r\nimport React from \"react\";\r\n\r\nclass Card extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isFav: false,\r\n        }\r\n    }\r\n    render(){\r\n        const  handleFavorite = () => {\r\n            if(this.state.isFav === true){\r\n                this.setState(false);\r\n                this.props.deleteFavorite(this.props.id);\r\n            } else {\r\n                this.setState(true);\r\n                this.props.addFavorite(this.props);\r\n            }\r\n        }\r\n        return (<>\r\n        <div className={styles.contenedor}>\r\n            {\r\n   this.state.isFav ? (\r\n      <button onClick={handleFavorite}>‚ù§Ô∏è</button>\r\n   ) : (\r\n      <button onClick={handleFavorite}>ü§ç</button>\r\n   )\r\n}\r\n            <button className={styles.boton} onClick={()=>this.props.onClose(this.props.id)}>X</button>\r\n             <Link to={`/detail/${this.props.id}`} className={styles.Link}>  \r\n            <h2>Nombre: {this.props.name}</h2>\r\n            </Link> \r\n            <h2 className={styles.caracter} >Specie: {this.props.species}</h2>\r\n            <h2 className={styles.caracter} >Genero: {this.props.gender}</h2>\r\n            <img  className={styles.img} src={this.props.image} alt=\"\"/>\r\n        </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\nreturn {\r\n    myFavorite: this.state.myFavorite,\r\n}\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      addFavorite: () => {\r\n        dispatch(addFavorite())\r\n      },\r\n      deleteFavorite: ()=> {\r\n        dispatch(deleteFavorite());\r\n    }\r\n    };\r\n  };\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Card);\r\n\r\n// export default function Card ({id,name,species,gender,image,onClose}){\r\n\r\n//     const [isFav , setIsFav] = useState(false);\r\n\r\n//     const dispatch = useDispatch();\r\n//     // dispatch le enviaba informacion a las actiond para que despues la funcion reduce , cambie o modifique el estado global con esa misma informacion\r\n\r\n//    const myFavorite = useSelector(state => state.myFavorite);\r\n       \r\n   \r\n\r\n\r\n\r\n//    useEffect(() => {\r\n//     for(let i = 0; i<myFavorite.length; i++){\r\n//         if(myFavorite[i].id === props.id){\r\n//             setIsFav(true);\r\n//         }\r\n//     }\r\n//     // mapStateToProps().forEach((fav) => {\r\n//     //    if (fav.id === props.id) {\r\n//     //       setIsFav(true);\r\n//     //    }\r\n//     // });\r\n//  }, [myFavorite]);\r\n\r\n//    const handleFavorite = (props) => {\r\n//     if(isFav === true){\r\n//         setIsFav(false);\r\n//         dispatch(deleteFavorite());\r\n//     } else {\r\n//         setIsFav(true);\r\n//         dispatch(addFavorite());\r\n//     }\r\n//    }\r\n\r\n    \r\n//     return (\r\n//         <div className={styles.contenedor}>\r\n//             {\r\n//    isFav ? (\r\n//       <button onClick={handleFavorite}>‚ù§Ô∏è</button>\r\n//    ) : (\r\n//       <button onClick={handleFavorite}>ü§ç</button>\r\n//    )\r\n// }\r\n//             <button className={styles.boton} onClick={()=>onClose(id)}>X</button>\r\n//              <Link to={`/detail/${id}`} className={styles.Link}>  \r\n//             <h2>Nombre: {name}</h2>\r\n//             </Link> \r\n//             <h2 className={styles.caracter} >Specie: {species}</h2>\r\n//             <h2 className={styles.caracter} >Genero: {gender}</h2>\r\n//             <img  className={styles.img} src={image} alt=\"\"/>\r\n//         </div>\r\n//     )\r\n//     }\r\n\r\n    \r\n    {/* <Link to={`/detail/${id}`}> esto seria que cuando aga clic en el link me va aparecer el id de cada personaje en un nuevo servidor o Ruta*/}\r\n    {/* pagina the shadow css generator es super util*/}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}