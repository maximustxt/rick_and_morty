{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\rick_and_morty\\\\Front\\\\src\\\\components\\\\Cards\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport Card from \"../Card/Card\";\nimport styles from \"./Cards.module.css\";\nimport Nav from \"../Nav/Nav\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Cards(_ref) {\n  _s();\n  let {\n    characters,\n    onClose,\n    onSearch,\n    idUser,\n    setcharacters\n  } = _ref;\n  /* es el arreglo de <personajes className=\"\"></personajes> tambien usamos la prop onClose =>FUNCTION*/\n\n  const [prevIdUser, setPrevIdUser] = useState(idUser); // creamos un estadoque va a contener el id con el que iniciamos sesion\n\n  useEffect(() => {\n    if (prevIdUser !== idUser) {\n      setcharacters([]);\n      setPrevIdUser(idUser);\n    }\n  }, [idUser]);\n\n  //cuando se monte renderizo las cards\n  // cuando se desmonte vacio el array de cards\n  // if(idUser !== idUser) {\n\n  //   useEffect(() => {\n  //     return () => {\n  //       setcharacters([]);\n  //     };\n  //   }, []);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.contenedor,\n      children: characters === null || characters === void 0 ? void 0 : characters.map(_ref2 => {\n        let {\n          id,\n          name,\n          species,\n          gender,\n          image /*podia hacer destructuring aqui...*/\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          id: id // es el id de cada personaje del array characters.. se lo pasamos como props a Card..\n          ,\n          name: name,\n          species: species,\n          gender: gender,\n          image: image,\n          idUser: idUser,\n          onClose: onClose\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Cards, \"lQEmExvl5v/vwaTkc2fvM/IB2FY=\");\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["Card","styles","Nav","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Cards","_ref","_s","characters","onClose","onSearch","idUser","setcharacters","prevIdUser","setPrevIdUser","children","fileName","_jsxFileName","lineNumber","columnNumber","className","contenedor","map","_ref2","id","name","species","gender","image","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/rick_and_morty/Front/src/components/Cards/Cards.jsx"],"sourcesContent":["import Card from \"../Card/Card\";\r\nimport styles from \"./Cards.module.css\";\r\nimport Nav from \"../Nav/Nav\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nexport default function Cards({\r\n  characters,\r\n  onClose,\r\n  onSearch,\r\n  idUser,\r\n  setcharacters,\r\n}) {\r\n  /* es el arreglo de <personajes className=\"\"></personajes> tambien usamos la prop onClose =>FUNCTION*/\r\n\r\n  const [prevIdUser, setPrevIdUser] = useState(idUser); // creamos un estadoque va a contener el id con el que iniciamos sesion\r\n\r\n  useEffect(() => {\r\n    if (prevIdUser !== idUser) {\r\n      setcharacters([]);\r\n      setPrevIdUser(idUser);\r\n    }\r\n  }, [idUser]);\r\n\r\n  //cuando se monte renderizo las cards\r\n  // cuando se desmonte vacio el array de cards\r\n  // if(idUser !== idUser) {\r\n\r\n  //   useEffect(() => {\r\n  //     return () => {\r\n  //       setcharacters([]);\r\n  //     };\r\n  //   }, []);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Nav onSearch={onSearch} />\r\n      <div className={styles.contenedor}>\r\n        {characters?.map(\r\n          ({\r\n            id,\r\n            name,\r\n            species,\r\n            gender,\r\n            image /*podia hacer destructuring aqui...*/,\r\n          }) => (\r\n            <Card\r\n              key={id}\r\n              id={id} // es el id de cada personaje del array characters.. se lo pasamos como props a Card..\r\n              name={name}\r\n              species={species}\r\n              gender={gender}\r\n              image={image}\r\n              idUser={idUser}\r\n              onClose={onClose}\r\n            />\r\n          )\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjC,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAM1B;EAAAC,EAAA;EAAA,IAN2B;IAC5BC,UAAU;IACVC,OAAO;IACPC,QAAQ;IACRC,MAAM;IACNC;EACF,CAAC,GAAAN,IAAA;EACC;;EAEA,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAACW,MAAM,CAAC,CAAC,CAAC;;EAEtDZ,SAAS,CAAC,MAAM;IACd,IAAIc,UAAU,KAAKF,MAAM,EAAE;MACzBC,aAAa,CAAC,EAAE,CAAC;MACjBE,aAAa,CAACH,MAAM,CAAC;IACvB;EACF,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;;EAEZ;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACET,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA,CAACJ,GAAG;MAACY,QAAQ,EAAEA;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC3BjB,OAAA;MAAKkB,SAAS,EAAEvB,MAAM,CAACwB,UAAW;MAAAN,QAAA,EAC/BP,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEc,GAAG,CACdC,KAAA;QAAA,IAAC;UACCC,EAAE;UACFC,IAAI;UACJC,OAAO;UACPC,MAAM;UACNC,KAAK,CAAC;QACR,CAAC,GAAAL,KAAA;QAAA,oBACCrB,OAAA,CAACN,IAAI;UAEH4B,EAAE,EAAEA,EAAG,CAAC;UAAA;UACRC,IAAI,EAAEA,IAAK;UACXC,OAAO,EAAEA,OAAQ;UACjBC,MAAM,EAAEA,MAAO;UACfC,KAAK,EAAEA,KAAM;UACbjB,MAAM,EAAEA,MAAO;UACfF,OAAO,EAAEA;QAAQ,GAPZe,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAQP;MAAA,CACH;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG;EAAA,gBACL;AAEP;AAACZ,EAAA,CAxDuBF,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}