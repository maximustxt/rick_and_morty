{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\FT-M2\\\\rick_and_morty\\\\src\\\\components\\\\Detail\\\\Detail.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detail = () => {\n  _s();\n  var _character$origin;\n  const {\n    Detailid\n  } = useParams;\n  const [character, setcharacter] = useState({});\n  {/*Esto seria cada personaje que cuando coloquemos un id , lo busca con axios en el servidor y nos lo trae en este estado , para luego usarlo*/}\n  useEffect(() => {\n    const URL = \"https://be-a-rym.up.railway.app/api\";\n    const KEY = \"2fed7cd4836b.dab7726779e7348bd5ea\";\n    Axios(`${URL}/character/${Detailid}?key=${KEY}`) // /*Peticion al servidor*/\n    .then(response => setcharacter(response.data)); // response.data ==> { es el objeto con el personaje y el id que buscamos al hacer la peticion..} esto lo que hace es agregarlo al estado vacio y crear ahora un objeto que es el personaje..\n  });\n\n  https:\n  //be-a-rym.up.railway.app/api/character/1?key=2fed7cd4836b.dab7726779e7348bd5ea\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Name: \", character.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Status: \", character.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Specie: \", character.specie]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Gender: \", character.gender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Origin: \", (_character$origin = character.origin) === null || _character$origin === void 0 ? void 0 : _character$origin.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Detail, \"nlrycxOPx9mF9B7Qv9t6w1y4njQ=\");\n_c = Detail;\nexport default Detail;\n{/*Este código es el que buscará al personaje de la API cada vez que el componente se monte.*/}\n{/*Y luego, cada vez que se desmonte, borrará su información.*/}\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["useState","useParams","useEffect","Link","Axios","jsxDEV","_jsxDEV","Detail","_s","_character$origin","Detailid","character","setcharacter","URL","KEY","then","response","data","https","children","name","fileName","_jsxFileName","lineNumber","columnNumber","status","specie","gender","origin","src","image","to","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/FT-M2/rick_and_morty/src/components/Detail/Detail.jsx"],"sourcesContent":[" import { useState } from \"react\";\r\n import {useParams} from \"react-router-dom\";\r\n import { useEffect } from \"react\";\r\n import { Link } from \"react-router-dom\";\r\n import Axios from  \"axios\";\r\n\r\n const Detail = () => {\r\n const {Detailid} = useParams;\r\n const [character,setcharacter] = useState({});{/*Esto seria cada personaje que cuando coloquemos un id , lo busca con axios en el servidor y nos lo trae en este estado , para luego usarlo*/}\r\n useEffect(() => {\r\n    const URL = \"https://be-a-rym.up.railway.app/api\";\r\n    const KEY = \"2fed7cd4836b.dab7726779e7348bd5ea\";\r\n     Axios(`${URL}/character/${Detailid}?key=${KEY}`) // /*Peticion al servidor*/\r\n    .then((response =>setcharacter(response.data))) // response.data ==> { es el objeto con el personaje y el id que buscamos al hacer la peticion..} esto lo que hace es agregarlo al estado vacio y crear ahora un objeto que es el personaje..\r\n    })\r\n    https://be-a-rym.up.railway.app/api/character/1?key=2fed7cd4836b.dab7726779e7348bd5ea\r\n   return (\r\n    <div>\r\n        <h2>Name: {character.name}</h2>\r\n        <h2>Status: {character.status}</h2>\r\n        <h2>Specie: {character.specie}</h2>\r\n        <h2>Gender: {character.gender}</h2>\r\n        <h2>Origin: {character.origin?.name}</h2>\r\n        <img src = {image} />\r\n        <Link to={\"/home\"}>\r\n        <button>Home</button>\r\n        </Link>\r\n     </div>\r\n   )\r\n}\r\n\r\nexport default Detail;\r\n\r\n{/*Este código es el que buscará al personaje de la API cada vez que el componente se monte.*/}\r\n{/*Y luego, cada vez que se desmonte, borrará su información.*/}"],"mappings":";;AAAC,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,iBAAA;EACrB,MAAM;IAACC;EAAQ,CAAC,GAAGT,SAAS;EAC5B,MAAM,CAACU,SAAS,EAACC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAAC,CAAC;EAC/CE,SAAS,CAAC,MAAM;IACb,MAAMW,GAAG,GAAG,qCAAqC;IACjD,MAAMC,GAAG,GAAG,mCAAmC;IAC9CV,KAAK,CAAE,GAAES,GAAI,cAAaH,QAAS,QAAOI,GAAI,EAAC,CAAC,CAAC;IAAA,CACjDC,IAAI,CAAEC,QAAQ,IAAGJ,YAAY,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAE,EAAC;EAChD,CAAC,CAAC;;EACFC,KAAK;EAAC;EACP,oBACCZ,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,GAAI,QAAM,EAACR,SAAS,CAACS,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC/BlB,OAAA;MAAAa,QAAA,GAAI,UAAQ,EAACR,SAAS,CAACc,MAAM;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACnClB,OAAA;MAAAa,QAAA,GAAI,UAAQ,EAACR,SAAS,CAACe,MAAM;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACnClB,OAAA;MAAAa,QAAA,GAAI,UAAQ,EAACR,SAAS,CAACgB,MAAM;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACnClB,OAAA;MAAAa,QAAA,GAAI,UAAQ,GAAAV,iBAAA,GAACE,SAAS,CAACiB,MAAM,cAAAnB,iBAAA,uBAAhBA,iBAAA,CAAkBW,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACzClB,OAAA;MAAKuB,GAAG,EAAIC;IAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACrBlB,OAAA,CAACH,IAAI;MAAC4B,EAAE,EAAE,OAAQ;MAAAZ,QAAA,eAClBb,OAAA;QAAAa,QAAA,EAAQ;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACd;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEX,CAAC;AAAAhB,EAAA,CAvBMD,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AAyBb,eAAeA,MAAM;AAErB,CAAC;AACD,CAAC;AAA+D,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}