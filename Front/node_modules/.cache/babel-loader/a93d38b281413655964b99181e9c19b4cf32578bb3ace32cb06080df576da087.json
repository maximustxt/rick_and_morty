{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\rick_and_morty\\\\Front\\\\src\\\\components\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { getFavorites } from \"../../redux/actions\";\nimport styles from \"./Card.module.css\"; // el ./ => esto quiere decir que es en la carpeta... ../ sale de la carpeta y entra en la carpeta que le indiquemos => ../Card/Card.jsx\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(_ref) {\n  _s();\n  let {\n    id,\n    name,\n    species,\n    gender,\n    image,\n    onClose\n  } = _ref;\n  const [isFav, setIsFav] = useState(false);\n  const dispatch = useDispatch();\n  const myFavorites = useSelector(state => state.myFavorites);\n  const allcharacter = useSelector(state => state.allcharacter);\n  const addFavorite = async character => {\n    await axios.post(\"http://localhost:3001/favoritos\", character); // character sweia el body que luego lo usamos en nuestro servidor y aparte character es lo que le pasamos como argumento a esta funcion cuando hacemos la funcion handleFavorite ===> character ===> addFavorite({ id, name, species, gender, image }).\n    alert(\"Personaje agregado como Favorito\");\n  };\n  const deleteFavorite = async id => {\n    await axios.delete(`http://localhost:3001/favoritos/${id}`); // character sweia el body que luego lo usamos en nuestro servidor y aparte character es lo que le pasamos como argumento a esta funcion cuando hacemos la funcion handleFavorite ===> character ===> addFavorite({ id, name, species, gender, image }).\n    dispatch(getFavorites());\n    alert(\"Card eliminada con exito!!\");\n  };\n  //dispatch le enviaba informacion a las actiond para que despues la funcion reduce , cambie o modifique el estado global con esa misma informacion\n\n  useEffect(() => {\n    allcharacter.forEach(fav => {\n      if (fav.id === id) {\n        setIsFav(true);\n      }\n    });\n  }, [allcharacter]);\n  const handleFavorite = () => {\n    if (isFav === true) {\n      setIsFav(false);\n      deleteFavorite(id); // esto le manda a action ==> {type: delete , payload : id que nos dan por aca..}\n    } else {\n      setIsFav(true);\n      addFavorite({\n        id,\n        name,\n        species,\n        gender,\n        image\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.contenedor,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.divBoton,\n      children: [isFav ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.boton11,\n        onClick: handleFavorite,\n        children: \"\\u2764\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.boton11,\n        onClick: handleFavorite,\n        children: \"\\uD83E\\uDD0D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.boton,\n        onClick: () => onClose(id),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/detail/${id}`,\n      className: styles.Link,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Nombre: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.caracter,\n      children: [\"Specie: \", species]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.caracter,\n      children: [\"Genero: \", gender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.img,\n      src: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n// traemos el state global de redux , esto no los brinda la funcion conecct()..\n// y luego esto lo tenemos como props en nuestro componentes Card..\n_s(Card, \"1HuJ4KKR44YlmijRbnG8duWYNs8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Card;\nexport default Card;\n{\n  /* <Link to={`/detail/${id}`}> esto seria que cuando aga clic en el link me va aparecer el id de cada personaje en un nuevo servidor o Ruta*/\n}\n{\n  /* pagina the shadow css generator es super util*/\n}\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["Link","getFavorites","styles","useDispatch","useSelector","React","useState","useEffect","axios","jsxDEV","_jsxDEV","Card","_ref","_s","id","name","species","gender","image","onClose","isFav","setIsFav","dispatch","myFavorites","state","allcharacter","addFavorite","character","post","alert","deleteFavorite","delete","forEach","fav","handleFavorite","className","contenedor","children","divBoton","boton11","onClick","fileName","_jsxFileName","lineNumber","columnNumber","boton","to","caracter","img","src","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/rick_and_morty/Front/src/components/Card/Card.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { getFavorites } from \"../../redux/actions\";\r\nimport styles from \"./Card.module.css\"; // el ./ => esto quiere decir que es en la carpeta... ../ sale de la carpeta y entra en la carpeta que le indiquemos => ../Card/Card.jsx\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Card({ id, name, species, gender, image, onClose }) {\r\n  const [isFav, setIsFav] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const myFavorites = useSelector((state) => state.myFavorites);\r\n  const allcharacter = useSelector((state) => state.allcharacter);\r\n\r\n  const addFavorite = async (character) => {\r\n    await axios.post(\"http://localhost:3001/favoritos\", character); // character sweia el body que luego lo usamos en nuestro servidor y aparte character es lo que le pasamos como argumento a esta funcion cuando hacemos la funcion handleFavorite ===> character ===> addFavorite({ id, name, species, gender, image }).\r\n    alert(\"Personaje agregado como Favorito\");\r\n  };\r\n\r\n  const deleteFavorite = async (id) => {\r\n    await axios.delete(`http://localhost:3001/favoritos/${id}`); // character sweia el body que luego lo usamos en nuestro servidor y aparte character es lo que le pasamos como argumento a esta funcion cuando hacemos la funcion handleFavorite ===> character ===> addFavorite({ id, name, species, gender, image }).\r\n    dispatch(getFavorites());\r\n    alert(\"Card eliminada con exito!!\");\r\n  };\r\n  //dispatch le enviaba informacion a las actiond para que despues la funcion reduce , cambie o modifique el estado global con esa misma informacion\r\n\r\n  useEffect(() => {\r\n    allcharacter.forEach((fav) => {\r\n      if (fav.id === id) {\r\n        setIsFav(true);\r\n      }\r\n    });\r\n  }, [allcharacter]);\r\n\r\n  const handleFavorite = () => {\r\n    if (isFav === true) {\r\n      setIsFav(false);\r\n      deleteFavorite(id); // esto le manda a action ==> {type: delete , payload : id que nos dan por aca..}\r\n    } else {\r\n      setIsFav(true);\r\n      addFavorite({ id, name, species, gender, image });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.contenedor}>\r\n      <div className={styles.divBoton}>\r\n        {isFav ? (\r\n          <button className={styles.boton11} onClick={handleFavorite}>\r\n            ‚ù§Ô∏è\r\n          </button>\r\n        ) : (\r\n          <button className={styles.boton11} onClick={handleFavorite}>\r\n            ü§ç\r\n          </button>\r\n        )}\r\n        <button className={styles.boton} onClick={() => onClose(id)}>\r\n          X\r\n        </button>\r\n      </div>\r\n      <Link to={`/detail/${id}`} className={styles.Link}>\r\n        <h2>Nombre: {name}</h2>\r\n      </Link>\r\n      <h2 className={styles.caracter}>Specie: {species}</h2>\r\n      <h2 className={styles.caracter}>Genero: {gender}</h2>\r\n      <img className={styles.img} src={image} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// traemos el state global de redux , esto no los brinda la funcion conecct()..\r\n// y luego esto lo tenemos como props en nuestro componentes Card..\r\n\r\nexport default Card;\r\n\r\n{\r\n  /* <Link to={`/detail/${id}`}> esto seria que cuando aga clic en el link me va aparecer el id de cada personaje en un nuevo servidor o Ruta*/\r\n}\r\n{\r\n  /* pagina the shadow css generator es super util*/\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}