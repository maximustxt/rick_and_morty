{"ast":null,"code":"const validacion = (userData, seterrores, errores) => {\n  // username:\n  if (!userData.username) {\n    seterrores({\n      ...errores,\n      username: \"Email vacio\"\n    });\n  } else if (userData.username.length > 35) {\n    seterrores({\n      ...errores,\n      username: \"El email no debe superar los 35 caracteres...\"\n    });\n  } else if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username)) {\n    seterrores({\n      ...errores,\n      username: \"\"\n    });\n  } else {\n    seterrores({\n      ...errores,\n      username: \"Email invalido\"\n    });\n  }\n\n  //password:\n  if (!userData.password) {\n    seterrores({\n      ...errores,\n      password: \"password vacio\"\n    });\n  } else if (userData.password.length > 10) {\n    seterrores({\n      ...errores,\n      password: \"La password no debe superar los 10 caracteres\"\n    });\n  } else if (/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(userData.password)) {\n    seterrores({\n      ...errores,\n      password: \"\"\n    });\n  } else {\n    seterrores({\n      ...errores,\n      password: \"password invalida\"\n    });\n  }\n};\nexport default validacion;\n\n// const validacionEmail = (userData,seterrores,errores) => {\n//     if (!userData.username) seterrores({ ...errores, username: \"Email vacío\" }); \n//   else {\n//     if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username)) \n//       seterrores({ ...errores, username: \"\" });\n//     else seterrores({ ...errores, username: \"Email inválido\" });\n//   }\n// }\n// const validacionPassword = (userData,seterrores,errores) => {\n//     if (!userData.password) seterrores({ ...errores, password: \"Contraseña vacía\" });\n//   else {\n//     if (/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(userData.password))\n//       seterrores({ ...errores, password: \"\" });\n//     else seterrores({ ...errores, password: \"Contraseña inválida\" });\n//   }\n// }","map":{"version":3,"names":["validacion","userData","seterrores","errores","username","length","test","password"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/FT-M2/rick_and_morty/src/components/Form/validation.js"],"sourcesContent":["\r\n\r\nconst validacion = (userData,seterrores,errores) => {\r\n  // username:\r\n  if (!userData.username){\r\n    seterrores({ ...errores,username: \"Email vacio\"})\r\n  } else if(userData.username.length > 35){\r\n    seterrores({ ...errores,username: \"El email no debe superar los 35 caracteres...\"})\r\n  }else if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username))  {\r\n    seterrores({ ...errores,username: \"\" });\r\n}else{\r\n  seterrores({ ...errores,username: \"Email invalido\"})\r\n}\r\n\r\n//password:\r\nif (!userData.password){\r\n  seterrores({ ...errores,password: \"password vacio\"})\r\n} else if(userData.password.length > 10){\r\n  seterrores({ ...errores,password: \"La password no debe superar los 10 caracteres\"})\r\n} else if(/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(userData.password)){\r\n  seterrores({ ...errores, password: \"\"});\r\n} else{\r\n  seterrores({ ...errores,password: \"password invalida\"})\r\n}\r\n}\r\n\r\n\r\nexport default validacion;\r\n\r\n// const validacionEmail = (userData,seterrores,errores) => {\r\n//     if (!userData.username) seterrores({ ...errores, username: \"Email vacío\" }); \r\n//   else {\r\n//     if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username)) \r\n//       seterrores({ ...errores, username: \"\" });\r\n//     else seterrores({ ...errores, username: \"Email inválido\" });\r\n//   }\r\n// }\r\n// const validacionPassword = (userData,seterrores,errores) => {\r\n//     if (!userData.password) seterrores({ ...errores, password: \"Contraseña vacía\" });\r\n//   else {\r\n//     if (/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(userData.password))\r\n//       seterrores({ ...errores, password: \"\" });\r\n//     else seterrores({ ...errores, password: \"Contraseña inválida\" });\r\n//   }\r\n// }"],"mappings":"AAEA,MAAMA,UAAU,GAAGA,CAACC,QAAQ,EAACC,UAAU,EAACC,OAAO,KAAK;EAClD;EACA,IAAI,CAACF,QAAQ,CAACG,QAAQ,EAAC;IACrBF,UAAU,CAAC;MAAE,GAAGC,OAAO;MAACC,QAAQ,EAAE;IAAa,CAAC,CAAC;EACnD,CAAC,MAAM,IAAGH,QAAQ,CAACG,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAC;IACtCH,UAAU,CAAC;MAAE,GAAGC,OAAO;MAACC,QAAQ,EAAE;IAA+C,CAAC,CAAC;EACrF,CAAC,MAAK,IAAI,6CAA6C,CAACE,IAAI,CAACL,QAAQ,CAACG,QAAQ,CAAC,EAAG;IAChFF,UAAU,CAAC;MAAE,GAAGC,OAAO;MAACC,QAAQ,EAAE;IAAG,CAAC,CAAC;EAC3C,CAAC,MAAI;IACHF,UAAU,CAAC;MAAE,GAAGC,OAAO;MAACC,QAAQ,EAAE;IAAgB,CAAC,CAAC;EACtD;;EAEA;EACA,IAAI,CAACH,QAAQ,CAACM,QAAQ,EAAC;IACrBL,UAAU,CAAC;MAAE,GAAGC,OAAO;MAACI,QAAQ,EAAE;IAAgB,CAAC,CAAC;EACtD,CAAC,MAAM,IAAGN,QAAQ,CAACM,QAAQ,CAACF,MAAM,GAAG,EAAE,EAAC;IACtCH,UAAU,CAAC;MAAE,GAAGC,OAAO;MAACI,QAAQ,EAAE;IAA+C,CAAC,CAAC;EACrF,CAAC,MAAM,IAAG,6CAA6C,CAACD,IAAI,CAACL,QAAQ,CAACM,QAAQ,CAAC,EAAC;IAC9EL,UAAU,CAAC;MAAE,GAAGC,OAAO;MAAEI,QAAQ,EAAE;IAAE,CAAC,CAAC;EACzC,CAAC,MAAK;IACJL,UAAU,CAAC;MAAE,GAAGC,OAAO;MAACI,QAAQ,EAAE;IAAmB,CAAC,CAAC;EACzD;AACA,CAAC;AAGD,eAAeP,UAAU;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}