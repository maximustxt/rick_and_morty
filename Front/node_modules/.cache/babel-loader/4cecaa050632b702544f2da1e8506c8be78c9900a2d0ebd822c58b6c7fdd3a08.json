{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\rick_and_morty\\\\Front\\\\src\\\\components\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { addFavorite, deleteFavorite } from \"../../redux/actions\";\nimport styles from \"./Card.module.css\"; // el ./ => esto quiere decir que es en la carpeta... ../ sale de la carpeta y entra en la carpeta que le indiquemos => ../Card/Card.jsx\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(_ref) {\n  _s();\n  let {\n    id,\n    name,\n    species,\n    gender,\n    image,\n    onClose,\n    myFavorites\n  } = _ref;\n  const [isFav, setIsFav] = useState(false);\n  const addFavorite = character => {\n    axios.post(\"http://loscalhost:3001/rickandmorty/fav\", character) // character sweia el body que luego lo usamos en nuestro servidor y aparte character es lo que le pasamos como argumento a esta funcion cuando hacemos la funcion handleFavorite ===> character ===> addFavorite({ id, name, species, gender, image }).\n    .then(response => console.log(\"ok\"));\n  };\n  const deleteFavorite = id => {\n    axios.delete(`http://loscalhost:3001/rickandmorty/fav/${id}`) // character sweia el body que luego lo usamos en nuestro servidor y aparte character es lo que le pasamos como argumento a esta funcion cuando hacemos la funcion handleFavorite ===> character ===> addFavorite({ id, name, species, gender, image }).\n    .then(response => console.log(\"ok\"));\n  };\n  //dispatch le enviaba informacion a las actiond para que despues la funcion reduce , cambie o modifique el estado global con esa misma informacion\n\n  // useEffect(() => {\n  //      for(let i = 0; i<myFavorites.length; i++){\n  //               if(myFavorites[i].id === id){\n  //                       setIsFav(true);\n  //                  }\n  //              }\n  //          }, [myFavorites]);\n\n  useEffect(() => {\n    myFavorites.forEach(fav => {\n      if (fav.id === id) {\n        setIsFav(true);\n      }\n    });\n  }, [myFavorites]);\n  const handleFavorite = () => {\n    if (isFav === true) {\n      setIsFav(false);\n      deleteFavorite(id); // esto le manda a action ==> {type: delete , payload : id que nos dan por aca..}\n    } else {\n      setIsFav(true);\n      addFavorite({\n        id,\n        name,\n        species,\n        gender,\n        image\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.contenedor,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.divBoton,\n      children: [isFav ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.boton11,\n        onClick: handleFavorite,\n        children: \"\\u2764\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.boton11,\n        onClick: handleFavorite,\n        children: \"\\uD83E\\uDD0D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.boton,\n        onClick: () => onClose(id),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/detail/${id}`,\n      className: styles.Link,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Nombre: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.caracter,\n      children: [\"Specie: \", species]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.caracter,\n      children: [\"Genero: \", gender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.img,\n      src: image,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"P/ohr7L6r3Ai4GOhTgqo0B9M8uQ=\");\n_c = Card;\nconst mapStateToProps = state => {\n  return {\n    myFavorites: state.myFavorites\n  };\n};\n// traemos el state global de redux , esto no los brinda la funcion conecct()..\n// y luego esto lo tenemos como props en nuestro componentes Card..\n\nexport default connect(mapStateToProps, null)(Card);\n{\n  /* <Link to={`/detail/${id}`}> esto seria que cuando aga clic en el link me va aparecer el id de cada personaje en un nuevo servidor o Ruta*/\n}\n{\n  /* pagina the shadow css generator es super util*/\n}\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["Link","addFavorite","deleteFavorite","styles","connect","React","useState","useEffect","axios","jsxDEV","_jsxDEV","Card","_ref","_s","id","name","species","gender","image","onClose","myFavorites","isFav","setIsFav","character","post","then","response","console","log","delete","forEach","fav","handleFavorite","className","contenedor","children","divBoton","boton11","onClick","fileName","_jsxFileName","lineNumber","columnNumber","boton","to","caracter","img","src","alt","_c","mapStateToProps","state","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/rick_and_morty/Front/src/components/Card/Card.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { addFavorite, deleteFavorite } from \"../../redux/actions\";\r\nimport styles from \"./Card.module.css\"; // el ./ => esto quiere decir que es en la carpeta... ../ sale de la carpeta y entra en la carpeta que le indiquemos => ../Card/Card.jsx\r\nimport { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Card({ id, name, species, gender, image, onClose, myFavorites }) {\r\n  const [isFav, setIsFav] = useState(false);\r\n\r\n  const addFavorite = (character) => {\r\n    axios\r\n      .post(\"http://loscalhost:3001/rickandmorty/fav\", character) // character sweia el body que luego lo usamos en nuestro servidor y aparte character es lo que le pasamos como argumento a esta funcion cuando hacemos la funcion handleFavorite ===> character ===> addFavorite({ id, name, species, gender, image }).\r\n      .then((response) => console.log(\"ok\"));\r\n  };\r\n\r\n  const deleteFavorite = (id) => {\r\n    axios\r\n      .delete(`http://loscalhost:3001/rickandmorty/fav/${id}`) // character sweia el body que luego lo usamos en nuestro servidor y aparte character es lo que le pasamos como argumento a esta funcion cuando hacemos la funcion handleFavorite ===> character ===> addFavorite({ id, name, species, gender, image }).\r\n      .then((response) => console.log(\"ok\"));\r\n  };\r\n  //dispatch le enviaba informacion a las actiond para que despues la funcion reduce , cambie o modifique el estado global con esa misma informacion\r\n\r\n  // useEffect(() => {\r\n  //      for(let i = 0; i<myFavorites.length; i++){\r\n  //               if(myFavorites[i].id === id){\r\n  //                       setIsFav(true);\r\n  //                  }\r\n  //              }\r\n  //          }, [myFavorites]);\r\n\r\n  useEffect(() => {\r\n    myFavorites.forEach((fav) => {\r\n      if (fav.id === id) {\r\n        setIsFav(true);\r\n      }\r\n    });\r\n  }, [myFavorites]);\r\n\r\n  const handleFavorite = () => {\r\n    if (isFav === true) {\r\n      setIsFav(false);\r\n      deleteFavorite(id); // esto le manda a action ==> {type: delete , payload : id que nos dan por aca..}\r\n    } else {\r\n      setIsFav(true);\r\n      addFavorite({ id, name, species, gender, image });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.contenedor}>\r\n      <div className={styles.divBoton}>\r\n        {isFav ? (\r\n          <button className={styles.boton11} onClick={handleFavorite}>\r\n            ‚ù§Ô∏è\r\n          </button>\r\n        ) : (\r\n          <button className={styles.boton11} onClick={handleFavorite}>\r\n            ü§ç\r\n          </button>\r\n        )}\r\n        <button className={styles.boton} onClick={() => onClose(id)}>\r\n          X\r\n        </button>\r\n      </div>\r\n      <Link to={`/detail/${id}`} className={styles.Link}>\r\n        <h2>Nombre: {name}</h2>\r\n      </Link>\r\n      <h2 className={styles.caracter}>Specie: {species}</h2>\r\n      <h2 className={styles.caracter}>Genero: {gender}</h2>\r\n      <img className={styles.img} src={image} alt=\"\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    myFavorites: state.myFavorites,\r\n  };\r\n};\r\n// traemos el state global de redux , esto no los brinda la funcion conecct()..\r\n// y luego esto lo tenemos como props en nuestro componentes Card..\r\n\r\nexport default connect(mapStateToProps, null)(Card);\r\n\r\n{\r\n  /* <Link to={`/detail/${id}`}> esto seria que cuando aga clic en el link me va aparecer el id de cada personaje en un nuevo servidor o Ruta*/\r\n}\r\n{\r\n  /* pagina the shadow css generator es super util*/\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}