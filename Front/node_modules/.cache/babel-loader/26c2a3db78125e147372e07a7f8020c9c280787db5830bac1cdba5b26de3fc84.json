{"ast":null,"code":"import axios from \"axios\";\nexport const FILTER = \"FILTER\";\nexport const ORDER = \"ORDER\";\nexport const LOGIN = \"LOGIN\";\nexport const GET_FAVORITES = \"GET_FAVORITES\";\nexport const REMPLACE_FAV = \"REMPLACE_FAV\";\nexport const REMPLACE_HOME = \"REMPLACE_HOME\";\nexport const VACIO_HOME = \"VACIO_HOME\";\nexport const getFavorites = idUser => {\n  // console.log(idUser);\n\n  return async function (dispatch) {\n    try {\n      //http://localhost:3001/favoritos?idUser=1\n      const response = await axios.get(`http://localhost:3001/favoritos?idUser=${idUser}`);\n      dispatch({\n        type: GET_FAVORITES,\n        payload: response.data\n      });\n    } catch (error) {\n      if (error.response && error.response.status === 500) {\n        //* cuando me tiraba el error de estado 500 cuando hacia el dispatch del get , aca lo que hago es preguntar por ese error y setear el peyload en un array vacio , de esta manera no mostrara mas la card ultima cundo sea eliminada\n        dispatch({\n          type: GET_FAVORITES,\n          payload: []\n        });\n      } else {\n        //* de lo contrario tirrar el error normal y corriente de catch..\n        alert(error.response.data.error);\n      }\n    }\n  };\n};\nexport const Login = (username, password) => {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`http://localhost:3001/login?username=${username}&password=${password}`);\n      if (response.data.access === true) {\n        dispatch({\n          type: LOGIN,\n          payload: response.data.dataValues.id\n        });\n      }\n    } catch (error) {\n      alert(error.response.data.error);\n    }\n  };\n};\n_c = Login;\nexport const filterCards = gender => {\n  return {\n    type: FILTER,\n    payload: gender\n  };\n};\nexport const orderCards = id => {\n  return {\n    type: ORDER,\n    payload: id\n  };\n};\nexport const RemplaceFav = Array => {\n  return {\n    type: REMPLACE_FAV,\n    payload: Array\n  };\n};\n\n// export const RemplaceHome = (Array) => {\n//   return { type: REMPLACE_HOME, payload: Array };\n// };\n_c2 = RemplaceFav;\nexport const VacioHome = () => {\n  return {\n    type: VACIO_HOME,\n    payload: []\n  };\n};\n_c3 = VacioHome;\nexport const onSearch = id => {\n  return async function (dispatch) {\n    const response = await axios.get(`http://localhost:3001/onsearch/${id}`);\n    dispatch({\n      type: REMPLACE_HOME\n    });\n  };\n  const URL_BASE = \"http://localhost:3001\";\n  if (characters.find(char => char.id === id)) {\n    return alert(\"Personaje repetido\");\n  }\n  fetch(`${URL_BASE}/onsearch/${id}`).then(response => response.json()).then(data => {\n    if (data.name) {\n      setcharacters(oldChars => [...oldChars, data]);\n    } else {\n      window.alert(\"No hay personajes con ese ID\");\n    }\n  });\n};\n{\n  /*A la funcion delteFavorite recibe el id de los personajes y addFavorite recibe un personaje*/\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"RemplaceFav\");\n$RefreshReg$(_c3, \"VacioHome\");","map":{"version":3,"names":["axios","FILTER","ORDER","LOGIN","GET_FAVORITES","REMPLACE_FAV","REMPLACE_HOME","VACIO_HOME","getFavorites","idUser","dispatch","response","get","type","payload","data","error","status","alert","Login","username","password","access","dataValues","id","_c","filterCards","gender","orderCards","RemplaceFav","Array","_c2","VacioHome","_c3","onSearch","URL_BASE","characters","find","char","fetch","then","json","name","setcharacters","oldChars","window","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/rick_and_morty/Front/src/redux/actions.js"],"sourcesContent":["import axios from \"axios\";\r\nexport const FILTER = \"FILTER\";\r\nexport const ORDER = \"ORDER\";\r\nexport const LOGIN = \"LOGIN\";\r\nexport const GET_FAVORITES = \"GET_FAVORITES\";\r\nexport const REMPLACE_FAV = \"REMPLACE_FAV\";\r\nexport const REMPLACE_HOME = \"REMPLACE_HOME\";\r\nexport const VACIO_HOME = \"VACIO_HOME\";\r\n\r\nexport const getFavorites = (idUser) => {\r\n  // console.log(idUser);\r\n\r\n  return async function (dispatch) {\r\n    try {\r\n      //http://localhost:3001/favoritos?idUser=1\r\n      const response = await axios.get(\r\n        `http://localhost:3001/favoritos?idUser=${idUser}`\r\n      );\r\n      dispatch({ type: GET_FAVORITES, payload: response.data });\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 500) {\r\n        //* cuando me tiraba el error de estado 500 cuando hacia el dispatch del get , aca lo que hago es preguntar por ese error y setear el peyload en un array vacio , de esta manera no mostrara mas la card ultima cundo sea eliminada\r\n        dispatch({ type: GET_FAVORITES, payload: [] });\r\n      } else {\r\n        //* de lo contrario tirrar el error normal y corriente de catch..\r\n        alert(error.response.data.error);\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const Login = (username, password) => {\r\n  return async function (dispatch) {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3001/login?username=${username}&password=${password}`\r\n      );\r\n      if (response.data.access === true) {\r\n        dispatch({ type: LOGIN, payload: response.data.dataValues.id });\r\n      }\r\n    } catch (error) {\r\n      alert(error.response.data.error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const filterCards = (gender) => {\r\n  return { type: FILTER, payload: gender };\r\n};\r\n\r\nexport const orderCards = (id) => {\r\n  return { type: ORDER, payload: id };\r\n};\r\n\r\nexport const RemplaceFav = (Array) => {\r\n  return { type: REMPLACE_FAV, payload: Array };\r\n};\r\n\r\n// export const RemplaceHome = (Array) => {\r\n//   return { type: REMPLACE_HOME, payload: Array };\r\n// };\r\n\r\nexport const VacioHome = () => {\r\n  return { type: VACIO_HOME, payload: [] };\r\n};\r\n\r\nexport const onSearch = (id) => {\r\n  return async function (dispatch) {\r\n    const response = await axios.get(`http://localhost:3001/onsearch/${id}`);\r\n    dispatch({ type: REMPLACE_HOME });\r\n  };\r\n\r\n  const URL_BASE = \"http://localhost:3001\";\r\n\r\n  if (characters.find((char) => char.id === id)) {\r\n    return alert(\"Personaje repetido\");\r\n  }\r\n\r\n  fetch(`${URL_BASE}/onsearch/${id}`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.name) {\r\n        setcharacters((oldChars) => [...oldChars, data]);\r\n      } else {\r\n        window.alert(\"No hay personajes con ese ID\");\r\n      }\r\n    });\r\n};\r\n\r\n{\r\n  /*A la funcion delteFavorite recibe el id de los personajes y addFavorite recibe un personaje*/\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}