{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\FT-M2\\\\rick_and_morty\\\\src\\\\components\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./Form.module.css\";\nimport { useState } from \"react\";\nimport validacion from \"./validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    login\n  } = _ref;\n  const [userData, setUserData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [errores, seterrores] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const handleInputChange = event => {\n    const Propiedad = event.target.name; // esto seria el nombre del input osea username o password..\n    const value = event.target.value; // esto seria el valor de la propiedad , osea lo que escribamos en el input..\n    setUserData({\n      ...userData,\n      [Propiedad]: value\n    });\n    seterrores(validacion({\n      ...userData,\n      [Propiedad]: value\n    }, errores));\n  };\n  const SubmitHandel = event => {\n    event.preventDefault(); // hace que no se recargue la pagina , por defecto el evento submit recarga la pagina...\n    login(userData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.div2,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.div,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: SubmitHandel,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.div1,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Escribir email aqui...\",\n            value: userData.username,\n            type: \"text\",\n            name: \"username\",\n            onChange: handleInputChange,\n            className: errores.username ? styles.error : styles.correcto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.span,\n            children: errores.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.div1,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Escribir contrase\\xF1a aqui...\",\n            value: userData.password,\n            type: \"text\",\n            name: \"password\",\n            onChange: handleInputChange,\n            className: errores.password ? styles.error : styles.correcto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.span,\n            children: errores.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"GVKbCgUVC6mhvtdRiaNn7YQTyfo=\");\n_c = Form;\n{/* className={errores.username ? styles.error : styles.success} ==> entonces aca se pregunta si en el estado de errores en gmail hay algo entonces que se ejecute el estilo de la class error , de lo contrario que se ejecute la class que esta todo correcto*/}\n{/* <span>{errores.username}</span>  ==> Aca creamos un span que nos mostrara el tipo de error al lado del input*/}\n{/*const validacionEmail = (userData,seterrores,errores) => {\r\n    if (!userData.username) seterrores({ ...errores, username: \"Email vacío\"}); // se pregunta si en la propiedad usename del estado no hay algo, entonces que tire un error el el stado erores diciendo \"esta vacio\"..\r\n  else {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username)) // de lo contrario que verifique que el usename cumpla con ciertos panoramas como : @ , .com , etc.., de lo contrario tirar otro error diciendo \"es invalido\"\r\n      seterrores({ ...errores, username: \"\" });\r\n    else seterrores({ ...errores, username: \"Email inválido\" });\r\n  }\r\n }*/}\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["styles","useState","validacion","jsxDEV","_jsxDEV","Form","_ref","_s","login","userData","setUserData","username","password","errores","seterrores","handleInputChange","event","Propiedad","target","name","value","SubmitHandel","preventDefault","className","div2","children","div","onSubmit","div1","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","error","correcto","span","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/FT-M2/rick_and_morty/src/components/Form/Form.jsx"],"sourcesContent":["import styles from \"./Form.module.css\";\r\nimport { useState } from \"react\";\r\nimport validacion from \"./validation\";\r\n\r\nconst Form = ({login}) => {\r\n  const [userData, setUserData] = useState({ username: \"\", password: \"\" });\r\n  const [errores,seterrores] = useState({ username: \"\", password: \"\" });\r\n  \r\n  const handleInputChange = (event) => {\r\n    const Propiedad = event.target.name; // esto seria el nombre del input osea username o password..\r\n    const value = event.target.value;  // esto seria el valor de la propiedad , osea lo que escribamos en el input..\r\n    setUserData({...userData , [Propiedad] : value})\r\n     seterrores(validacion({...userData , [Propiedad] : value},errores));\r\n  }\r\n  const SubmitHandel = (event) => {\r\n    event.preventDefault(); // hace que no se recargue la pagina , por defecto el evento submit recarga la pagina...\r\n   login(userData);\r\n  }\r\n\r\nreturn (\r\n    <div  className={styles.div2}>\r\n    <div className={styles.div}>\r\n        <form onSubmit={SubmitHandel}> {/*Es un eventp de formulario no de button..*/}\r\n            <div className={styles.div1}>\r\n            <label htmlFor=\"username\">Username: </label>\r\n                <input placeholder=\"Escribir email aqui...\"\r\n                value={userData.username}\r\n                type=\"text\" \r\n                name=\"username\"\r\n                onChange={ handleInputChange}\r\n                className={errores.username ? styles.error : styles.correcto} \r\n                ></input>\r\n                <span className={styles.span}>{errores.username}</span> \r\n\r\n            </div>\r\n            <div className={styles.div1}>\r\n            <label htmlFor=\"password\">Password: </label>\r\n                <input placeholder=\"Escribir contraseña aqui...\"\r\n                value = {userData.password} \r\n                type=\"text\"\r\n                name=\"password\"\r\n                onChange={ handleInputChange}\r\n                className={errores.password ? styles.error : styles.correcto}\r\n                ></input>\r\n                <span className={styles.span}>{errores.password}</span> \r\n            </div>\r\n        <button type=\"submit\">Login</button>\r\n        </form>\r\n    </div>\r\n    </div>\r\n)\r\n}\r\n\r\n{/* className={errores.username ? styles.error : styles.success} ==> entonces aca se pregunta si en el estado de errores en gmail hay algo entonces que se ejecute el estilo de la class error , de lo contrario que se ejecute la class que esta todo correcto*/}\r\n{/* <span>{errores.username}</span>  ==> Aca creamos un span que nos mostrara el tipo de error al lado del input*/}\r\n\r\n{/*const validacionEmail = (userData,seterrores,errores) => {\r\n    if (!userData.username) seterrores({ ...errores, username: \"Email vacío\"}); // se pregunta si en la propiedad usename del estado no hay algo, entonces que tire un error el el stado erores diciendo \"esta vacio\"..\r\n  else {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.username)) // de lo contrario que verifique que el usename cumpla con ciertos panoramas como : @ , .com , etc.., de lo contrario tirar otro error diciendo \"es invalido\"\r\n      seterrores({ ...errores, username: \"\" });\r\n    else seterrores({ ...errores, username: \"Email inválido\" });\r\n  }\r\n}*/}\r\n\r\n\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}